<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.movision.mybatis.PostZanRecord.mapper.PostZanRecordMapper">
    <resultMap id="BaseResultMap" type="com.movision.mybatis.PostZanRecord.entity.PostZanRecord">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userid" property="userid" jdbcType="INTEGER"/>
        <result column="postid" property="postid" jdbcType="INTEGER"/>
        <result column="intime" property="intime" jdbcType="TIMESTAMP"/>
        <result column="isread" property="isread" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, userid, postid, intime, isread
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from yw_post_zan_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from yw_post_zan_record
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.movision.mybatis.PostZanRecord.entity.PostZanRecord">
        insert into yw_post_zan_record (id, userid, postid,
        intime, isread)
        values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{postid,jdbcType=INTEGER},
        #{intime,jdbcType=TIMESTAMP}, #{isread,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.movision.mybatis.PostZanRecord.entity.PostZanRecord">
        insert into yw_post_zan_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="postid != null">
                postid,
            </if>
            <if test="intime != null">
                intime,
            </if>
            <if test="isread != null">
                isread,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="postid != null">
                #{postid,jdbcType=INTEGER},
            </if>
            <if test="intime != null">
                #{intime,jdbcType=TIMESTAMP},
            </if>
            <if test="isread != null">
                #{isread,jdbcTyp=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.movision.mybatis.PostZanRecord.entity.PostZanRecord">
        update yw_post_zan_record
        <set>
            <if test="userid != null">
                userid = #{userid,jdbcType=INTEGER},
            </if>
            <if test="postid != null">
                postid = #{postid,jdbcType=INTEGER},
            </if>
            <if test="intime != null">
                intime = #{intime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.movision.mybatis.PostZanRecord.entity.PostZanRecord">
        update yw_post_zan_record
        set userid = #{userid,jdbcType=INTEGER},
        postid = #{postid,jdbcType=INTEGER},
        intime = #{intime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="queryByUserid" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.PostZanRecord.entity.PostZanRecordVo">
 SELECT r.intime,u.nickname FROM yw_post_zan_record r LEFT JOIN yw_user u
        ON r.userid=u.id WHERE r.postid IN (SELECT id FROM yw_post WHERE userid=#{userid,jdbcType=INTEGER} and isdel=0)
        ORDER BY r.intime DESC LIMIT 0,1
    </select>
    <select id="findAllZanList" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.PostZanRecord.entity.PostZanRecordVo">
        SELECT r.intime,u.nickname,u.photo,r.postid FROM yw_post_zan_record r LEFT JOIN yw_user u
        ON r.userid=u.id WHERE r.userid=#{userid,jdbcType=INTEGER} ORDER BY r.intime DESC
    </select>
    <select id="queryPost" resultType="com.movision.mybatis.post.entity.Post" parameterType="java.lang.Integer">

        SELECT p.title,p.postcontent,p.activetype,p.type,p.coverimg,p.isactive,p.id,p.subtitle FROM yw_post p
        WHERE p.id=#{postid,jdbcType=INTEGER}
    </select>

    <update id="updateZanReadByComment" parameterType="java.lang.Integer">
        UPDATE yw_post_comment_zan_record
        SET isread = 1
        WHERE
        (
        commentid IN (
        SELECT
        id
        FROM
        yw_post_comment
        WHERE
        userid = #{userid}
        AND isdel = 0
        )
        OR commentid IN (
        SELECT
        id
        FROM
        yw_post_comment
        WHERE
        postid IN (
        SELECT
        id
        FROM
        yw_post
        WHERE
        userid = #{userid}
        AND isdel = 0
        )
        AND isdel = 0
        ))
        <![CDATA[ AND userid <> #{userid} ]]>
    </update>

    <update id="updateZanReadByPost" parameterType="java.lang.Integer">
        UPDATE yw_post_zan_record SET isread=1 WHERE postid in
        (SELECT id FROM yw_post WHERE userid=#{userid,jdbcType=INTEGER} AND isdel=0) AND userid <![CDATA[<>]]>
        #{userid,jdbcType=INTEGER}
    </update>
    <select id="queryZanNumber" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT
        count(tt.id)
        FROM
        (
        (
        SELECT
        r.id,
        r.userid,
        r.commentid,
        NULL AS postid,
        r.intime,
        r.isread
        FROM
        yw_post_comment_zan_record r
        WHERE
        (
        r.commentid IN (
        SELECT
        id
        FROM
        yw_post_comment
        WHERE
        userid = #{userid}
        )
        OR r.commentid IN (
        SELECT
        id
        FROM
        yw_post_comment
        WHERE
        postid IN (
        SELECT
        id
        FROM
        yw_post
        WHERE
        userid = #{userid}
        )
        )
        )
        <![CDATA[ AND r.userid <> #{userid} ]]>
        AND r.isread = 0
        )
        UNION ALL
        (
        SELECT
        d.id,
        d.userid,
        NULL AS commentid,
        d.postid,
        d.intime,
        d.isread
        FROM
        yw_post_zan_record d
        WHERE
        d.postid IN (
        SELECT
        id
        FROM
        yw_post
        WHERE
        userid = #{userid}
        AND isdel = 0
        )
        <![CDATA[ AND d.userid <> #{userid} ]]>
        AND d.isread = 0
        )
        ) tt
    </select>
    <select id="userPostZan" parameterType="java.lang.Integer" resultType="java.lang.Integer">
     SELECT COUNT(1) FROM yw_post_zan_record LEFT JOIN yw_post ON yw_post.id=yw_post_zan_record.postid
    WHERE yw_post_zan_record.postid in (SELECT id FROM  yw_post WHERE userid=#{userid,jdbcType=INTEGER})
    </select>
</mapper>