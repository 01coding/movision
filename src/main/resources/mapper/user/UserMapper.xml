<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.movision.mybatis.user.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.movision.mybatis.user.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="openid" property="openid" jdbcType="VARCHAR"/>
        <result column="qq" property="qq" jdbcType="VARCHAR"/>
        <result column="sina" property="sina" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="invitecode" property="invitecode" jdbcType="VARCHAR"/>
        <result column="referrals" property="referrals" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="sign" property="sign" jdbcType="VARCHAR"/>
        <result column="attention" property="attention" jdbcType="INTEGER"/>
        <result column="fans" property="fans" jdbcType="INTEGER"/>
        <result column="points" property="points" jdbcType="INTEGER"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="intime" property="intime" jdbcType="TIMESTAMP"/>
        <result column="growth" property="growth" jdbcType="INTEGER"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="isdv" property="isdv" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="applydate" property="applydate" jdbcType="DATE"/>
        <result column="deviceno" property="deviceno" jdbcType="VARCHAR"/>
        <result column="login_time" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="isrecommend" property="isrecommend" jdbcType="INTEGER"/>
        <result column="heat_value" property="heat_value" jdbcType="INTEGER"/>
        <result column="longitude" property="longitude" jdbcType="VARCHAR"/>
        <result column="latitude" property="latitude" jdbcType="VARCHAR"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="ip_city" property="ip_city" jdbcType="VARCHAR"/>
        <result column="source" property="source" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, openid, qq, sina, phone, email, token, invitecode, referrals, nickname, sign, attention, fans,
        points, photo, sex, birthday, province, city, intime, growth, level, isdv, status, applydate, deviceno,
        login_time, isrecommend, heat_value, longitude, latitude, ip, ip_city,source
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from yw_user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!--查询个人主页中的个人信息-->
    <select id="queryUserInfo" parameterType="java.lang.Integer" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT t.photo, t.level, t.nickname, t.sign,
        (
        SELECT COUNT(1) FROM yw_post WHERE userid = #{userid,jdbcType=INTEGER}
        ) AS postsum,
        (
        SELECT sum(collectsum) FROM yw_post WHERE userid = #{userid,jdbcType=INTEGER}
        ) AS becollectsum,
        (
        SELECT sum(forwardsum) FROM yw_post WHERE userid = #{userid,jdbcType=INTEGER}
        ) AS besharesum
        FROM yw_user t WHERE t.id = #{userid,jdbcType=INTEGER}
    </select>

    <!--查询圈子的所属圈主-->
    <select id="queryCircleMasterByPhone" parameterType="java.lang.String"
            resultType="com.movision.mybatis.user.entity.User">
        SELECT id, photo, nickname, phone, sign
        FROM yw_user WHERE phone = #{phone,jdbcType=VARCHAR}
    </select>

    <select id="queryCircleManagerByCircleid" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.user.entity.User">
        SELECT id,photo,nickname,phone,level FROM yw_user WHERE id in(
        SELECT userid FROM yw_circle_manager WHERE circleid=#{circleid,jdbcType=INTEGER})
    </select>

    <select id="queryCircleaAministratorListById" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.user.entity.UserLike">
        SELECT id,nickname,photo FROM yw_user WHERE id in(
        SELECT userid FROM yw_circle_manager WHERE circleid=#{circleid,jdbcType=INTEGER})
    </select>

    <!--根据登录用户和圈子类型查询圈子的管理员列表-->
    <select id="queryCircleMangerByUseridList" parameterType="java.util.Map"
            resultType="java.lang.String">
        <if test="userid==null">
            SELECT nickname FROM yw_user WHERE id in(
            SELECT userid FROM yw_circle_manager WHERE circleid in(
            SELECT id FROM yw_circle c
            <where>
                <if test="category != null">
                    c.category=#{category,jdbcType=INTEGER}
                </if>
                <if test="circleman != null">
                    AND c.userid IN (SELECT id FROM yw_admin_user WHERE name LIKE
                    concat('%',#{circleman,jdbcType=VARCHAR},'%'))
                </if>
                <if test="circleid != null">
                    AND c.id = #{circleid,jdbcType=INTEGER}
                </if>
                <if test="status != null">
                    AND c.status = #{status,jdbcType=INTEGER}
                </if>
                <if test="begintime != null and endtime != null">
                    <![CDATA[AND c.createtime >= #{begintime,jdbcType=DATE} AND c.createtime <= DATE_ADD(#{endtime,jdbcType=DATE},INTERVAL 1 DAY)]]>
                </if>
            </where>
            )) GROUP BY phone DESC
        </if>
        <if test="userid!=null">
            SELECT u.nickname FROM yw_circle_manager c LEFT JOIN yw_user u ON u.id = c.userid WHERE circleid IN (
            SELECT id FROM yw_circle c WHERE (c.phone = (SELECT phone FROM yw_admin_user WHERE id =
            #{userid,jdbcType=INTEGER}) OR c.id IN
            (SELECT circleid FROM yw_circle_manager WHERE userid = (SELECT id FROM yw_user WHERE phone = (SELECT phone
            FROM yw_admin_user WHERE id = #{userid,jdbcType=INTEGER}))))
            <if test="category != null">
                AND c.category=#{category,jdbcType=INTEGER}
            </if>
            <if test="circleman != null">
                AND c.userid IN (SELECT id FROM yw_admin_user WHERE name LIKE
                concat('%',#{circleman,jdbcType=VARCHAR},'%'))
            </if>
            <if test="circleid != null">
                AND c.id = #{circleid,jdbcType=INTEGER}
            </if>
            <if test="status != null">
                AND c.status = #{status,jdbcType=INTEGER}
            </if>
            <if test="begintime != null and endtime != null">
                <![CDATA[AND c.createtime >= #{begintime,jdbcType=DATE} AND c.createtime <= DATE_ADD(#{endtime,jdbcType=DATE},INTERVAL 1 DAY)]]>
            </if>
            )
            GROUP BY u.nickname
        </if>

    </select>

    <!-- 查询圈子管理员列表 -->
    <select id="queryCircleManagerByCircleList" parameterType="java.lang.Integer"
            resultType="java.lang.String">
        SELECT nickname FROM yw_user WHERE id in(
        SELECT userid FROM yw_circle_manager WHERE circleid=#{circleid,jdbcType=INTEGER})
    </select>

    <!--根据用户id查询用户积分数-->
    <select id="queryUserPoint" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT points FROM yw_user WHERE id = #{userid,jdbcType=INTEGER}
    </select>

    <!--查询当前用户使用的APP最新版本号-->
    <select id="queryVersion" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT version FROM yw_app_version WHERE type = #{type,jdbcType=INTEGER}
    </select>

    <!--美番2.0发现页查询热门作者-->
    <select id="queryHotUserList" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT t1.id, t1.nickname, t1.photo, t1.phone, t1.fans FROM (
            (SELECT * FROM yw_user WHERE isrecommend = '1' AND id != '-1')
            UNION
            (SELECT * FROM yw_user WHERE id != '-1' ORDER BY heat_value DESC limit 10)
        ) t1 WHERE right(t1.phone,6) NOT LIKE '%000000' OR t1.phone IS NULL limit 10
    </select>

    <!--美番2.0发现作者页查询推荐作者列表-->
    <select id="findAllHotAuthor" parameterType="java.util.Map" resultType="com.movision.mybatis.user.entity.Author">
        SELECT t1.id, t1.nickname, t1.photo, t1.phone, t1.fans FROM (
        (SELECT * FROM yw_user WHERE isrecommend = '1' AND id != '-1')
        UNION
        (SELECT * FROM yw_user WHERE id != '-1' AND heat_value > '0' ORDER BY heat_value DESC)
        ) t1
        <where>
            right(t1.phone,6) NOT LIKE '%000000'
            <if test="userid != null and userid != ''">
                AND t1.id NOT IN (
                SELECT interestedusers FROM yw_follow_user WHERE userid = #{userid,jdbcType=INTEGER}
                )
                AND t1.id != #{userid,jdbcType=INTEGER}
            </if>
        </where>
        ORDER BY t1.isrecommend DESC,t1.heat_value DESC
    </select>

    <!--美番2.0发现作者页查询兴趣作者列表-->
    <select id="findAllInterestAuthor" parameterType="java.util.Map"
            resultType="com.movision.mybatis.user.entity.Author">
        SELECT t.* FROM (
            (SELECT id, nickname, photo, phone, heat_value FROM yw_user WHERE id IN (
                SELECT userid FROM yw_post WHERE circleid IN (
                  SELECT circleid FROM yw_follow_circle WHERE userid = #{userid,jdbcType=INTEGER}
                )
              )
            )
            UNION
            (
            SELECT id, nickname, photo, phone, heat_value FROM yw_user WHERE id IN (
                SELECT DISTINCT userid FROM yw_post WHERE id IN (
                    SELECT DISTINCT postid FROM yw_post_label_relation WHERE labelid IN (
                      SELECT labelid FROM yw_follow_label WHERE userid = #{userid,jdbcType=INTEGER}
                    )
                )
              )
            )
        ) t
        WHERE t.id NOT IN (
            SELECT interestedusers FROM yw_follow_user WHERE userid = #{userid,jdbcType=INTEGER}
        )
        AND t.id != #{userid,jdbcType=INTEGER}
        ORDER BY t.heat_value DESC
    </select>

    <!--美番2.0发现作者页查询附近作者列表-->
    <select id="findAllNearAuthor" parameterType="java.util.Map" resultType="com.movision.mybatis.user.entity.Author">
        SELECT t.* FROM(
        SELECT id, nickname, photo, phone, ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        #{lat,jdbcType=DOUBLE} * PI() / 180 - latitude * PI() / 180
        ) / 2
        ),2)
        + COS(#{lat,jdbcType=DOUBLE} * PI() / 180) * COS(latitude * PI() / 180) * POW(
        SIN(
        (
        #{lng,jdbcType=DOUBLE} * PI() / 180 - longitude * PI() / 180
        ) / 2
        ),2)
        )
        ) * 1000
        ) AS distance FROM yw_user
        ) t
        <where>
            30000 > t.distance
            AND t.id != '-1'
            <if test="userid != null and userid != ''">
                AND t.id NOT IN (
                SELECT interestedusers FROM yw_follow_user WHERE userid = #{userid,jdbcType=INTEGER}
                )
                AND t.id != #{userid,jdbcType=INTEGER}
            </if>
        </where>
        ORDER BY t.distance
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from yw_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.movision.mybatis.user.entity.User">
        insert into yw_user (id, openid, qq, sina, phone, email,
        token, invitecode, referrals,
        nickname, sign, attention,
        fans, points, photo,
        sex, birthday, province,
        city, intime, growth,
        level, status,applydate, deviceno, login_time)
        values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR},
        #{sina,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},
        #{token,jdbcType=VARCHAR}, #{invitecode,jdbcType=VARCHAR}, #{referrals,jdbcType=VARCHAR},
        #{nickname,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{attention,jdbcType=INTEGER},
        #{fans,jdbcType=INTEGER}, #{points,jdbcType=INTEGER}, #{photo,jdbcType=VARCHAR},
        #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{province,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR}, #{intime,jdbcType=TIMESTAMP}, #{growth,jdbcType=INTEGER},
        #{level,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{applydate,jdbcType=DATE}), #{deviceno},
        #{loginTime}
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.movision.mybatis.user.entity.User">
        insert into yw_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="sina != null">
                sina,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="invitecode != null">
                invitecode,
            </if>
            <if test="referrals != null">
                referrals,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="sign != null">
                sign,
            </if>
            attention,
            fans,
            <if test="points!=null">
                points,
            </if>
            <if test="photo != null">
                photo,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="intime != null">
                intime,
            </if>
            growth,
            level,
            isdv,
            status,
            <if test="applydate!=null">
                applydate,
            </if>
            <if test="deviceno!=null">
                deviceno,
            </if>
            <if test="loginTime!=null">
                login_time,
            </if>
            <if test="isrecommend!=null">
                isrecommend,
            </if>
            <if test="heat_value!=null">
                heat_value,
            </if>
            <if test="longitude!=null">
                longitude,
            </if>
            <if test="latitude!=null">
                latitude,
            </if>
            <if test="ip!=null">
                ip,
            </if>
            <if test="ip_city!=null">
                ip_city,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="sina != null">
                #{sina,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="invitecode != null">
                #{invitecode,jdbcType=VARCHAR},
            </if>
            <if test="referrals != null">
                #{referrals,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="sign != null">
                #{sign,jdbcType=VARCHAR},
            </if>
            0,
            0,
            <if test="points != null">
                #{points},
            </if>
            <if test="photo != null">
                #{photo,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="intime != null">
                #{intime},
            </if>
            0,
            0,
            0,
            0,
            <if test="applydate!=null">
                #{applydate,jdbcType=DATE},
            </if>
            <if test="deviceno!=null">
                #{deviceno},
            </if>
            <if test="loginTime!=null">
                #{loginTime},
            </if>
            <if test="isrecommend!=null">
                #{isrecommend},
            </if>
            <if test="heat_value!=null">
                #{heat_value},
            </if>
            <if test="longitude!=null">
                #{longitude},
            </if>
            <if test="latitude!=null">
                #{latitude},
            </if>
            <if test="ip!=null">
                #{ip},
            </if>
            <if test="ip_city!=null">
                #{ip_city},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.movision.mybatis.user.entity.User">
        update yw_user
        <set>
            <if test="openid != null">
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="sina != null">
                sina = #{sina,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="invitecode != null">
                invitecode = #{invitecode,jdbcType=VARCHAR},
            </if>
            <if test="referrals != null">
                referrals = #{referrals,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="sign != null">
                sign = #{sign,jdbcType=VARCHAR},
            </if>
            <if test="attention != null">
                attention = #{attention,jdbcType=INTEGER},
            </if>
            <if test="fans != null">
                fans = #{fans,jdbcType=INTEGER},
            </if>
            <if test="points != null">
                points = #{points,jdbcType=INTEGER},
            </if>
            <if test="photo != null">
                photo = #{photo,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="intime != null">
                intime = #{intime,jdbcType=TIMESTAMP},
            </if>
            <if test="growth != null">
                growth = #{growth,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="applydate!=null">
                applydate=#{applydate,jdbcType=DATE},
            </if>
            <if test="deviceno!=null">
                deviceno=#{deviceno},
            </if>
            <if test="loginTime!=null">
                login_time=#{loginTime},
            </if>
            <if test="isrecommend!=null">
                isrecommend=#{isrecommend},
            </if>
            <if test="heat_value!=null">
                heat_value=#{heat_value},
            </if>
            <if test="longitude!=null">
                longitude=#{longitude},
            </if>
            <if test="latitude!=null">
                latitude=#{latitude},
            </if>
            <if test="ip!=null">
                ip=#{ip},
            </if>
            <if test="ip_city!=null">
                ip_city=#{ip_city},
            </if>
            <if test="source != null">
                source=#{source},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.movision.mybatis.user.entity.User">
        update yw_user
        set openid = #{openid,jdbcType=VARCHAR},
        qq = #{qq,jdbcType=VARCHAR},
        sina = #{sina,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        token = #{token,jdbcType=VARCHAR},
        invitecode = #{invitecode,jdbcType=VARCHAR},
        referrals = #{referrals,jdbcType=VARCHAR},
        nickname = #{nickname,jdbcType=VARCHAR},
        sign = #{sign,jdbcType=VARCHAR},
        attention = #{attention,jdbcType=INTEGER},
        fans = #{fans,jdbcType=INTEGER},
        points = #{points,jdbcType=INTEGER},
        photo = #{photo,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=INTEGER},
        birthday = #{birthday,jdbcType=DATE},
        province = #{province,jdbcType=VARCHAR},
        city = #{city,jdbcType=VARCHAR},
        intime = #{intime,jdbcType=TIMESTAMP},
        growth = #{growth,jdbcType=INTEGER},
        level = #{level,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        deviceno = #{deviceno},
        login_time = #{loginTime}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--用户下单消费积分进行积分扣除-->
    <update id="deductPoints" parameterType="java.util.Map">
        UPDATE yw_user
        SET points = points - #{points,jdbcType=INTEGER}
        WHERE id = #{userid,jdbcType=INTEGER}
    </update>

    <select id="selectByPhone" parameterType="com.movision.mybatis.user.entity.User"
            resultType="com.movision.mybatis.user.entity.User">
        select
        <include refid="Base_Column_List"/>
        from yw_user
        where <![CDATA[ (id > 20000 OR id < 10000)]]> AND phone = #{phone}
    </select>

    <update id="updateUserByNickname" parameterType="com.movision.mybatis.user.entity.User">
        UPDATE yw_user SET nickname = #{nickname,jdbcType=VARCHAR} WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectLoginUserByPhone" parameterType="com.movision.mybatis.user.entity.User"
            resultType="com.movision.mybatis.user.entity.LoginUser">
        select
        u.*, i.accid, i.token as imtoken
        from yw_user u
        LEFT JOIN yw_im_user i on u.id= i.userid AND i.type = 1
        <where>
            <if test="phone != null || phone != ''">
                u.phone = #{phone}
            </if>
        </where>

    </select>

    <select id="queryUserByPoints" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT u.points
        FROM yw_user u
        WHERE u.id=#{id,jdbcType=INTEGER}
    </select>

    <select id="isExistAccount" parameterType="java.lang.String" resultType="int">
        SELECT COUNT(1) FROM yw_user
        <where>
            <if test="phone != null and phone != ''">
                phone = #{phone}
            </if>
        </where>
    </select>

    <insert id="registerAccount" parameterType="com.movision.mybatis.user.entity.RegisterUser" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO yw_user (phone, intime, status, token, nickname, deviceno)
        VALUES (#{phone}, #{intime}, #{status}, #{token}, #{nickname}, #{deviceno})
    </insert>

    <!--插入帖子活动分享记录-->
    <insert id="insertPostShare" parameterType="java.util.Map">
        INSERT INTO yw_post_share (userid, postid, intime, channel)
        VALUES (#{userid,jdbcType=INTEGER}, #{postid,jdbcType=INTEGER}, #{intime,jdbcType=TIMESTAMP}, #{channel,jdbcType=VARCHAR})
    </insert>

    <!--插入商品分享记录-->
    <insert id="insertGoodsShare" parameterType="java.util.Map">
        INSERT INTO yw_goods_share (userid, goodsid, intime, channel)
        VALUES (#{userid,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, #{intime,jdbcType=TIMESTAMP}, #{channel,jdbcType=VARCHAR})
    </insert>

    <!--插入举报用户记录-->
    <insert id="accusationUser" parameterType="java.util.Map">
        INSERT INTO yw_user_accusation (userid, beaccid, intime)
        VALUES (#{userid,jdbcType=INTEGER}, #{beaccid,jdbcType=INTEGER}, #{intime,jdbcType=TIMESTAMP})
    </insert>

    <select id="queryUserByOpenid" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT u.openid FROM yw_user u WHERE id=#{userid,jdbcType=INTEGER}
    </select>

    <select id="queryUserByNickname" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT u.nickname FROM yw_user u WHERE u.id=#{userid,jdbcType=INTEGER}
    </select>
    <select id="queryUserByNicknameBy" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT u.nickname FROM yw_user u WHERE u.id=(SELECT c.userid FROM yw_post c WHERE
        id=#{postid,jdbcType=INTEGER})
    </select>
    <select id="queryUser" resultType="com.movision.mybatis.user.entity.User" parameterType="java.lang.String">
        SELECT * FROM yw_user WHERE phone=#{phone,jdbcType=VARCHAR}
    </select>

    <select id="findAllUser" resultType="com.movision.mybatis.user.entity.User" parameterType="java.lang.Integer">
        SELECT u.id,u.nickname,u.phone,u.photo FROM yw_user u WHERE u.id=#{id,jdbcType=INTEGER}
    </select>
    <!-- <![CDATA[ (u.id > 20000 OR u.id < 10000)]]> -->
    <select id="findAlllikeQueryPostByNickname" resultType="com.movision.mybatis.user.entity.UserLike"
            parameterType="java.lang.String">
        SELECT u.nickname,u.id FROM yw_user u WHERE
        u.nickname LIKE concat('%',#{name,jdbcType=VARCHAR},'%')
        AND u.status=0
    </select>

    <update id="updateRegisterUser" parameterType="com.movision.mybatis.user.entity.RegisterUser">
        update yw_user
        SET token = #{token}, deviceno = #{deviceno}
        WHERE phone = #{phone}
    </update>

    <select id="queryUserbyPhoneByUserid" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT phone FROM yw_user WHERE id=#{userid,jdbcType=INTEGER}
    </select>

    <!-- 查看VIP申请列表 -->
    <select id="findAllqueryUsers" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id,u.nickname,u.phone,u.level,u.status,u.attention,vd.id AS appyid,u.heat_value AS
        heatvalue,u.isrecommend,u.isdv,
        (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id) AS autonym,
        (SELECT COUNT(1) FROM yw_post p WHERE p.userid=u.id) AS postsum,
        (SELECT COUNT(1) FROM yw_post po WHERE po.userid=u.id and po.isessence=1) AS isessencesum,
        (SELECT COALESCE(SUM(points),0) FROM yw_post_rewarded r WHERE r.postid IN (SELECT p1.id FROM yw_post p1 WHERE
        p1.userid=vd.userid AND p1.isdel=0)) AS exceptional,
        (SELECT COALESCE(SUM(collectsum),0) FROM yw_post p2 WHERE p2.userid=vd.userid AND p2.isdel=0) AS becollectsum,
        (SELECT COUNT(1) FROM yw_post_share s WHERE s.postid IN (SELECT p5.id FROM yw_post p5 WHERE p5.userid=vd.userid
        AND p5.isdel=0)) AS besharesum,
        (SELECT COALESCE(SUM(commentsum),0) FROM yw_post p3 WHERE p3.userid=vd.userid AND p3.isdel=0) AS commentsum,
        (SELECT COALESCE(SUM(zansum),0) FROM yw_post p4 WHERE p4.userid=vd.userid AND p4.isdel=0) AS zansum,u.fans,
        (SELECT apply_time FROM yw_apply_vip_detail WHERE userid = u.id ORDER BY userid,apply_time DESC LIMIT 1) AS
        applydate
        FROM yw_user u LEFT JOIN yw_apply_vip_detail vd ON vd.userid=u.id LEFT JOIN yw_autonym_authentication au ON
        au.userid=u.id
        WHERE vd.userid=u.id AND vd.isdel=0 AND u.status=0 AND u.phone IS NOT NULL AND (u.id <![CDATA[>]]> 20000 OR u.id
        <![CDATA[<]]> 10000) ORDER BY vd.apply_time DESC
    </select>

    <!-- 根据条件查询vip列表  -->
    <select id="findAllQueryByConditionvipList" parameterType="com.movision.mybatis.user.entity.SearchUser"
            resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id,u.nickname,u.phone,u.level,u.status,u.heat_value AS heatvalue,COALESCE(u.isrecommend,0) AS
        isrecommend,u.attention,u.isdv,
        (SELECT COUNT(1) FROM yw_post p WHERE p.userid=u.id AND p.isdel = 0) AS postsum,
        (SELECT COUNT(1) FROM yw_post po WHERE po.userid=u.id and po.isessence=1 AND po.isdel = 0) AS isessencesum,
        (SELECT COALESCE(SUM(points),0) FROM yw_post_rewarded r WHERE r.postid IN (SELECT p1.id FROM yw_post p1 WHERE
        p1.userid=u.id AND p1.isdel=0)) AS exceptional,
        (SELECT COALESCE(SUM(collectsum),0) FROM yw_post p2 WHERE p2.userid=u.id AND p2.isdel=0) AS becollectsum,
        (SELECT COUNT(1) FROM yw_post_share s WHERE s.postid IN (SELECT p5.id FROM yw_post p5 WHERE p5.userid=u.id AND
        p5.isdel=0)) AS besharesum,
        (SELECT COALESCE(SUM(commentsum),0) FROM yw_post p3 WHERE p3.userid=u.id AND p3.isdel=0) AS commentsum,
        (SELECT COALESCE(SUM(zansum),0) FROM yw_post p4 WHERE p4.userid=u.id AND p4.isdel=0) AS
        zansum,u.fans,(SELECT avd.audit_time FROM yw_audit_vip_detail avd INNER JOIN yw_apply_vip_detail vd ON vd.id =
        avd.apply_id WHERE status = 0 AND vd.userid = u.id) AS applydate,COALESCE(au.authstatus,3) AS authstatus
        FROM yw_user u
        LEFT JOIN yw_autonym_authentication au ON au.userid=u.id
        INNER JOIN (SELECT * FROM yw_apply_vip_detail WHERE isdel = 1 GROUP BY userid) vd ON vd.userid = u.id
        WHERE u.isdv>0 AND u.status=0
        AND <![CDATA[ (u.id > 20000 OR u.id < 10000) ]]>
        <if test="name!=null">
            AND u.nickname LIKE concat('%',#{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="phone!=null">
            AND u.phone=#{phone,jdbcType=VARCHAR}
        </if>
        <if test="begintime!=null and endtime!=null">
            AND u.id IN
            (SELECT vdl.userid FROM yw_audit_vip_detail al
            LEFT JOIN yw_apply_vip_detail vdl ON vdl.id = al.apply_id
            WHERE
            <![CDATA[al.audit_time >= #{begintime,jdbcType=TIMESTAMP}]]>
            <![CDATA[AND al.audit_time <= DATE_ADD(#{endtime,jdbcType=TIMESTAMP},INTERVAL 1 DAY)]]>)
        </if>
        <if test="authstatus==0">
            AND au.authstatus=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==1">
            AND au.authstatus=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==2">
            AND au.authstatus=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==3">
            AND au.authstatus IS NULL
        </if>
        <if test="type==1">
            ORDER BY vd.apply_time DESC
        </if>
        <if test="type==2">
            ORDER BY u.level DESC
        </if>
        <if test="type==null">
            ORDER BY u.intime
        </if>
    </select>

    <select id="findAllQueryIssuePostManList" resultType="com.movision.mybatis.bossUser.entity.BossUser">
        SELECT id,username FROM yw_admin_user WHERE isdel=0 AND status=0 AND username IS NOT NULL AND phone IS NOT NULL
    </select>

    <select id="findAllQueryCircleManList" resultType="com.movision.mybatis.user.entity.User"
            parameterType="java.lang.String">
        SELECT id,nickname
        FROM yw_user
        WHERE <![CDATA[ (id > 20000 OR id < 10000)]]>
        AND status=0 AND nickname IS NOT NULL AND phone IS NOT NULL
        <if test="nickname != null">
            AND nickname LIKE concat('%',#{nickname,jdbcType=VARCHAR},'%')
        </if>
    </select>

    <select id="findAllqueryAddVSortUser" resultType="com.movision.mybatis.user.entity.UserVo"
            parameterType="java.util.Map">
        SELECT u.id,u.nickname,u.phone,u.level,u.status,u.attention,u.isdv,
        (SELECT COUNT(1) FROM yw_post p WHERE p.userid=u.id) AS postsum,
        (SELECT COUNT(1) FROM yw_post po WHERE po.userid=u.id and po.isessence=1) AS isessencesum,
        (SELECT COALESCE(SUM(points),0) FROM yw_post_rewarded r WHERE r.postid IN (SELECT p1.id FROM yw_post p1 WHERE
        p1.userid=u.id AND p1.isdel=0)) AS exceptional,
        (SELECT COALESCE(SUM(collectsum),0) FROM yw_post p2 WHERE p2.userid=u.id AND p2.isdel=0) AS becollectsum,
        (SELECT COUNT(1) FROM yw_post_share s WHERE s.postid IN (SELECT p5.id FROM yw_post p5 WHERE p5.userid=u.id AND
        p5.isdel=0)) AS besharesum,
        (SELECT COALESCE(SUM(commentsum),0) FROM yw_post p3 WHERE p3.userid=u.id AND p3.isdel=0) AS commentsum,
        (SELECT COALESCE(SUM(zansum),0) FROM yw_post p4 WHERE p4.userid=u.id AND p4.isdel=0) AS
        zansum,u.fans,u.applydate
        <if test="time!=null">
            FROM yw_user u LEFT JOIN yw_audit_vip_detail vd ON vd.apply_userid=u.id WHERE u.level>0 AND u.status=0 AND
            vd.status=0 AND <![CDATA[ (u.id > 20000 OR u.id < 10000)]]> ORDER BY vd.audit_time DESC
        </if>
        <if test="grade!=null">
            FROM yw_user u WHERE u.level>0 AND u.status=0 AND <![CDATA[ (u.id>=20000 OR u.id< 10000)]]> ORDER
            BY
            u.level DESC
        </if>
    </select>

    <!-- 条件查询VIP申请用户列表 -->
    <select id="findAllQueryUniteConditionByApply" parameterType="java.util.Map"
            resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id,u.nickname,u.phone,u.level,u.status,vd.id AS appyid,u.heat_value AS
        heatvalue,COALESCE(u.isrecommend,0) AS isrecommend,u.attention,u.isdv,
        COALESCE((SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id),3) AS authstatus,
        (SELECT COUNT(1) FROM yw_post p WHERE p.userid=u.id) AS postsum,
        (SELECT COUNT(1) FROM yw_post po WHERE po.userid=u.id and po.isessence=1) AS isessencesum,
        (SELECT COALESCE(SUM(points),0) FROM yw_post_rewarded r WHERE r.postid IN (SELECT p1.id FROM yw_post p1 WHERE
        p1.userid=vd.userid AND p1.isdel=0)) AS exceptional,
        (SELECT COALESCE(SUM(collectsum),0) FROM yw_post p2 WHERE p2.userid=vd.userid AND p2.isdel=0) AS becollectsum,
        (SELECT COUNT(1) FROM yw_post_share s WHERE s.postid IN (SELECT p5.id FROM yw_post p5 WHERE p5.userid=vd.userid
        AND p5.isdel=0)) AS besharesum,
        (SELECT COALESCE(SUM(commentsum),0) FROM yw_post p3 WHERE p3.userid=vd.userid AND p3.isdel=0) AS commentsum,
        (SELECT COALESCE(SUM(zansum),0) FROM yw_post p4 WHERE p4.userid=vd.userid AND p4.isdel=0) AS zansum,u.fans,
        (SELECT apply_time FROM yw_apply_vip_detail WHERE userid = u.id ORDER BY userid,apply_time DESC LIMIT 1)AS
        applydate
        FROM yw_user u LEFT JOIN yw_apply_vip_detail vd ON vd.userid=u.id LEFT JOIN yw_autonym_authentication au ON
        au.userid=u.id
        WHERE vd.userid=u.id AND vd.isdel=0 AND u.status=0 AND u.phone IS NOT NULL
        AND <![CDATA[ (u.id > 20000 OR u.id < 10000)]]>
        <if test="username!=null">
            AND u.nickname LIKE concat('%',#{username,jdbcType=VARCHAR},'%')
        </if>
        <if test="phone!=null">
            AND u.phone=#{phone,jdbcType=VARCHAR}
        </if>
        <if test="authstatus==0">
            AND (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id)=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==1">
            AND (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id)=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==2">
            AND (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id)=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==3">
            AND (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id) IS NULL
        </if>
        <if test="begintime!=null and endtime!=null">
            AND vd.apply_time BETWEEN #{begintime,jdbcType=DATE} AND #{endtime,jdbcType=DATE}
        </if>
        <if test="type==1">
            ORDER BY vd.apply_time DESC
        </if>
        <if test="type==2">
            ORDER BY u.level DESC
        </if>
    </select>

    <select id="findAllQueryUserExamineAndVerify" parameterType="java.util.Map"
            resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id,u.nickname,u.phone,u.level,u.status,vd.id AS appyid,vd.audit_time AS audittime,vd.reason,vd.status
        AS auditStatus,u.heat_value AS heatvalue,u.isrecommend,u.attention,u.isdv,
        (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id) AS autonym,
        (SELECT COUNT(1) FROM yw_post p WHERE p.userid=u.id) AS postsum,
        (SELECT COUNT(1) FROM yw_post po WHERE po.userid=u.id and po.isessence=1) AS isessencesum,
        (SELECT COALESCE(SUM(points),0) FROM yw_post_rewarded r WHERE r.postid IN (SELECT p1.id FROM yw_post p1 WHERE
        p1.userid=vd.userid AND p1.isdel=0)) AS exceptional,
        (SELECT COALESCE(SUM(collectsum),0) FROM yw_post p2 WHERE p2.userid=vd.userid AND p2.isdel=0) AS becollectsum,
        (SELECT COUNT(1) FROM yw_post_share s WHERE s.postid IN (SELECT p5.id FROM yw_post p5 WHERE p5.userid=vd.userid
        AND p5.isdel=0)) AS besharesum,
        (SELECT COALESCE(SUM(commentsum),0) FROM yw_post p3 WHERE p3.userid=vd.userid AND p3.isdel=0) AS commentsum,
        (SELECT COALESCE(SUM(zansum),0) FROM yw_post p4 WHERE p4.userid=vd.userid AND p4.isdel=0) AS zansum,u.fans,
        (SELECT apply_time FROM yw_apply_vip_detail WHERE userid = u.id ORDER BY userid,apply_time DESC LIMIT 1) AS
        applydate,
        COALESCE(au.stauthstatus,3) AS authstatus
        FROM yw_user u LEFT JOIN yw_audit_vip_detail vd ON vd.apply_userid=u.id LEFT JOIN yw_autonym_authentication au
        ON au.userid=u.id
        WHERE vd.apply_userid=u.id AND u.phone IS NOT NULL
        AND <![CDATA[ (u.id > 20000 OR u.id< 10000)]]>
        <if test="username!=null">
            AND u.nickname LIKE concat('%',#{username,jdbcType=VARCHAR},'%')
        </if>
        <if test="phone!=null">
            AND u.phone=#{phone,jdbcType=VARCHAR}
        </if>
        <if test="authstatus==0">
            AND (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id)=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==1">
            AND (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id)=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==2">
            AND (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id)=#{authstatus,jdbcType=INTEGER}
        </if>
        <if test="authstatus==3">
            AND (SELECT authstatus FROM yw_autonym_authentication WHERE userid=u.id) IS NULL
        </if>
        <if test="begintime!=null and endtime!=null">
            AND vd.audit_time BETWEEN #{begintime,jdbcType=DATE} AND #{endtime,jdbcType=DATE}
        </if>
        <if test="type==1">
            ORDER BY vd.audit_time DESC
        </if>
        <if test="type == null">
            ORDER BY vd.audit_time DESC
        </if>
        <if test="type==2">
            ORDER BY u.level DESC
        </if>
    </select>


    <select id="findAllqueryAllUserList" parameterType="java.util.Map"
            resultType="com.movision.mybatis.user.entity.UserAll">
        SELECT u.id,u.nickname,u.phone,u.level,u.status,u.points,u.fans,u.intime,u.qq,u.sina,
        u.openid,aut.authstatus,u.heat_value,u.isrecommend,u.attention,u.isdv
        FROM yw_user u LEFT JOIN yw_autonym_authentication aut ON aut.userid=u.id WHERE
        <![CDATA[ (u.id >= 20000 OR u.id <= 10000)]]>
        <if test="nickname!=null">
            AND u.nickname LIKE concat('%',#{nickname,jdbcType=VARCHAR},'%')
        </if>
        <if test="phone!=null">
            AND u.phone=#{phone,jdbcType=VARCHAR}
        </if>
        <if test="authentication==0">
            AND aut.authstatus=#{authentication,jdbcType=INTEGER}
        </if>
        <if test="authentication==1">
            AND aut.authstatus=#{authentication,jdbcType=INTEGER}
        </if>
        <if test="authentication==2">
            AND aut.authstatus=#{authentication,jdbcType=INTEGER}
        </if>
        <if test="authentication==3">
            AND aut.authstatus IS NULL
        </if>
        <if test="isdv!=null">
            AND isdv=#{isdv,jdbcType=INTEGER}
        </if>
        <if test="status!=null">
            AND u.status=#{status,jdbcType=INTEGER}
        </if>
        <if test="begintime!=null and endtime!=null">
            AND u.intime BETWEEN #{begintime,jdbcType=DATE} AND #{endtime,jdbcType=DATE}
        </if>
        <if test="price!=null and conditionon!=null and conditiontwo!=null">
            <if test="conditionon==1">
                <if test="conditiontwo==3">
                    AND u.points &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND u.points = #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND u.points &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
            <if test="conditionon==2">
                <if test="conditiontwo==3">
                    AND coupon &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND coupon=#{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND coupon &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
            <if test="conditionon==3">
                <if test="conditiontwo==3">
                    AND postsum &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND postsum=#{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND postsum &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
            <if test="conditionon==4">
                <if test="conditiontwo==3">
                    AND isessencesum &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND isessencesum=#{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND isessencesum &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
            <if test="conditionon==5">
                <if test="conditiontwo==3">
                    AND u.fans &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND u.fans = #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND u.fans &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
        </if>
        <if test="login!=null">
            <if test="login==1">
                AND u.phone IS NOT NULL
            </if>
            <if test="login==2">
                AND u.openid IS NOT NULL
            </if>
            <if test="login==3">
                AND u.qq IS NOT NULL
            </if>
            <if test="login==4">
                AND u.sina IS NOT NULL
            </if>
        </if>
        <if test="pointsSort!=null">
            <if test="pointsSort==0">
                ORDER BY coupon ASC
            </if>
            <if test="pointsSort==1">
                ORDER BY coupon DESC
            </if>
        </if>
        <if test="postsumSort!=null">
            <if test="postsumSort==0">
                ORDER BY postsum ASC
            </if>
            <if test="postsumSort==1">
                ORDER BY postsum DESC
            </if>
        </if>
        <if test="isessenceSort!=null">
            <if test="isessenceSort==0">
                ORDER BY isessencesum ASC
            </if>
            <if test="isessenceSort==1">
                ORDER BY isessencesum DESC
            </if>
        </if>
        <if test="fansSort!=null">
            <if test="fansSort==0">
                ORDER BY fans ASC
            </if>
            <if test="fansSort==1">
                ORDER BY fans DESC
            </if>
        </if>
        <if test="pai!=null">
            <if test="pai==0">
                ORDER BY u.intime ASC
            </if>
            <if test="pai==1">
                ORDER BY u.intime DESC
            </if>
            <if test="pai==2">
                ORDER BY u.level DESC
            </if>
        </if>

    </select>

    <select id="queryUserStatistics" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.user.entity.UserAll">
        SELECT
        (SELECT COUNT(1) FROM yw_coupon WHERE isdel=0 AND userid=u.id) AS coupon,
        (SELECT COUNT(1) FROM yw_post WHERE isdel=0 AND userid=u.id AND isactive=0) AS postsum,
        (SELECT COUNT(1) FROM yw_post WHERE isdel=0 AND userid=u.id AND isessence=1 AND isactive=0) AS isessencesum
        FROM yw_user u WHERE
        u.id = #{id,jdbcType=INTEGER}
    </select>

    <!-- LIMIT #{pageNo,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER} -->
    <select id="queryAllTotal" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(u.id)
        FROM yw_user u LEFT JOIN yw_autonym_authentication aut ON aut.userid=u.id WHERE
        <![CDATA[ (u.id > 20000 OR u.id < 10000)]]>
        <if test="nickname!=null">
            AND u.nickname LIKE concat('%',#{nickname,jdbcType=VARCHAR},'%')
        </if>
        <if test="phone!=null">
            AND u.phone=#{phone,jdbcType=VARCHAR}
        </if>
        <if test="authentication==0">
            AND aut.authstatus=#{authentication,jdbcType=INTEGER}
        </if>
        <if test="authentication==1">
            AND aut.authstatus=#{authentication,jdbcType=INTEGER}
        </if>
        <if test="authentication==2">
            AND aut.authstatus=#{authentication,jdbcType=INTEGER}
        </if>
        <if test="authentication==3">
            AND aut.authstatus IS NULL
        </if>
        <if test="isdv!=null">
            AND isdv=#{isdv,jdbcType=INTEGER}
        </if>
        <if test="status!=null">
            AND u.status=#{status,jdbcType=INTEGER}
        </if>
        <if test="begintime!=null and endtime!=null">
            AND u.intime BETWEEN #{begintime,jdbcType=DATE} AND #{endtime,jdbcType=DATE}
        </if>
        <if test="price!=null and conditionon!=null and conditiontwo!=null">
            <if test="conditionon==1">
                <if test="conditiontwo==3">
                    AND u.points &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND u.points = #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND u.points &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
            <if test="conditionon==2">
                <if test="conditiontwo==3">
                    AND coupon &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND coupon=#{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND coupon &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
            <if test="conditionon==3">
                <if test="conditiontwo==3">
                    AND postsum &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND postsum=#{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND postsum &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
            <if test="conditionon==4">
                <if test="conditiontwo==3">
                    AND isessencesum &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND isessencesum=#{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND isessencesum &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
            <if test="conditionon==5">
                <if test="conditiontwo==3">
                    AND u.fans &gt; #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==2">
                    AND u.fans = #{price,jdbcType=INTEGER}
                </if>
                <if test="conditiontwo==1">
                    AND u.fans &lt; #{price,jdbcType=INTEGER}
                </if>
            </if>
        </if>
        <if test="login!=null">
            <if test="login==1">
                AND u.phone IS NOT NULL
            </if>
            <if test="login==2">
                AND u.openid IS NOT NULL
            </if>
            <if test="login==3">
                AND u.qq IS NOT NULL
            </if>
            <if test="login==4">
                AND u.sina IS NOT NULL
            </if>
        </if>
    </select>

    <update id="deleteUserByid" parameterType="java.util.Map">
        UPDATE yw_user
        <if test="type==1">
            SET status=1
        </if>
        <if test="type==0">
            SET status=0
        </if>
        WHERE id=#{userid,jdbcType=INTEGER}
    </update>

    <update id="deleteUserLevl" parameterType="java.util.Map">
        UPDATE yw_user
        <if test="type==1">
            SET isdv=1
        </if>
        <if test="type==0">
            SET isdv=0
        </if>
        WHERE id=#{userid,jdbcType=INTEGER}
    </update>

    <update id="updateAuditByUser" parameterType="java.util.Map">
        UPDATE yw_apply_vip_detail
        <if test="isdel==1">
            SET isdel=1
        </if>
        <if test="isdel==0">
            SET isdel=0
        </if>
        WHERE id=#{appyid,jdbcType=INTEGER}
    </update>

    <update id="updateVIPDetail" parameterType="java.util.Map">
        UPDATE yw_audit_vip_detail
        <set>
            <if test="status==0">
                status=#{status,jdbcType=INTEGER},
            </if>
            <if test="status==1">
                status=#{status,jdbcType=INTEGER},
                reason=#{reason,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE
    </update>

    <update id="updateUserAttention" parameterType="java.lang.Integer">
        UPDATE yw_user
        SET attention = attention + 1
        WHERE id = #{userid,jdbcType=INTEGER}
    </update>

    <select id="queryUserParticulars" parameterType="java.lang.String"
            resultType="com.movision.mybatis.user.entity.UserParticulars">
        SELECT u.*,
        (SELECT audit_time FROM yw_audit_vip_detail WHERE apply_userid=#{userid,jdbcType=VARCHAR} AND status=0) as
        viptime,
        aut.name,aut.idnumber,
        (SELECT COUNT(1) FROM yw_post WHERE userid=#{userid,jdbcType=VARCHAR} AND isdel = 0) as postnum,
        (SELECT COUNT(1) FROM yw_post WHERE userid=#{userid,jdbcType=VARCHAR} AND isessence=1) AS isessenceid,
        (SELECT COALESCE(SUM(points),0) FROM yw_post_rewarded WHERE userid=#{userid,jdbcType=VARCHAR}) AS reward,
        (SELECT SUM(points) FROM yw_post_rewarded WHERE postid IN (SELECT id FROM yw_post WHERE
        userid=#{userid,jdbcType=VARCHAR})) AS byreward,
        (SELECT COUNT(1) FROM yw_collection WHERE userid=#{userid,jdbcType=VARCHAR} AND type=0) AS collectpost,
        (SELECT COUNT(1) FROM yw_collection WHERE userid=#{userid,jdbcType=VARCHAR} AND type=1) AS collectgoods,
        (SELECT COUNT(1) FROM yw_collection WHERE postid IN ( SELECT id FROM yw_post WHERE
        userid=#{userid,jdbcType=VARCHAR})) as bycollect,
        (SELECT COUNT(1) FROM yw_goods_share WHERE userid=#{userid,jdbcType=VARCHAR}) as sharegoods,
        (SELECT COUNT(1) FROM yw_post_share WHERE userid=#{userid,jdbcType=VARCHAR}) as sharepost,
        (SELECT COUNT(1) FROM yw_post_share WHERE postid IN ( SELECT id FROM yw_post WHERE
        userid=#{userid,jdbcType=VARCHAR})) as byshare,
        (SELECT COUNT(1) FROM yw_post_comment WHERE userid=#{userid,jdbcType=VARCHAR}) as commentpost,
        (SELECT COUNT(1) FROM yw_goods_assessment WHERE userid=#{userid,jdbcType=VARCHAR}) as commentassessment,
        (SELECT COUNT(1) FROM yw_post_comment WHERE postid IN ( SELECT id FROM yw_post WHERE
        userid=#{userid,jdbcType=VARCHAR})) as bycomment,
        (SELECT COUNT(1) FROM yw_post_zan_record WHERE userid=#{userid,jdbcType=VARCHAR}) as zansum,
        (SELECT COUNT(1) FROM yw_post_zan_record WHERE postid IN ( SELECT id FROM yw_post WHERE
        userid=#{userid,jdbcType=VARCHAR})) as byzansum,
        (SELECT COUNT(1) FROM yw_follow_circle WHERE userid=#{userid,jdbcType=VARCHAR}) as circlefollow,
        (SELECT COUNT(1) FROM yw_post WHERE userid=#{userid,jdbcType=VARCHAR} AND ishot=1 AND isdel=0) as ishot,
        (SELECT MIN(intime) FROM yw_post WHERE userid=#{userid,jdbcType=VARCHAR}) AS oneissuepost,
        (SELECT MIN(collect_time) FROM yw_collection WHERE userid=#{userid,jdbcType=VARCHAR}) AS onecollection
        FROM yw_user AS u
        LEFT JOIN yw_autonym_authentication AS aut ON aut.userid=#{userid,jdbcType=VARCHAR} AND aut.authstatus=1
        WHERE u.id=#{userid,jdbcType=VARCHAR} AND u.status=0
    </select>

    <select id="queryProvinces" resultType="com.movision.mybatis.province.entity.ProvinceVo"
            parameterType="java.lang.String">
        SELECT addr.name,addr.phone,
        (SELECT name FROM yw_province WHERE code=addr.province)AS province,
        (SELECT name FROM yw_city WHERE code=addr.city) AS city,
        (SELECT name FROM yw_area WHERE code=addr.district) AS district,addr.street
        FROM
        yw_address as addr WHERE addr.userid=#{userid,jdbcType=INTEGER} AND addr.isdel=0
    </select>

    <select id="queryUserById" parameterType="java.lang.Integer" resultType="com.movision.mybatis.user.entity.UserAll">
        SELECT u.id,u.nickname,u.phone,u.level,u.status,u.points,u.fans,u.intime,u.qq,u.sina,u.openid,aut.authstatus,
        (SELECT COUNT(1) FROM yw_coupon WHERE isdel=0 AND userid=u.id) AS coupon,
        (SELECT COUNT(1) FROM yw_post WHERE isdel=0 AND userid=u.id) AS postsum,
        (SELECT COUNT(1) FROM yw_post WHERE isdel=0 AND userid=u.id AND isessence=1) AS isessencesum
        FROM yw_user u LEFT JOIN yw_autonym_authentication aut ON aut.userid=u.id WHERE u.id =
        (#{userid,jdbcType=INTEGER}) AND u.status=0
    </select>

    <select id="findAllqueryAttentionUserList" resultType="com.movision.mybatis.user.entity.UserAll"
            parameterType="java.lang.Integer">
        SELECT u.id,u.nickname,u.phone,u.level,u.status,u.points,u.fans,u.intime,u.qq,u.sina,u.openid,aut.authstatus,
        (SELECT COUNT(1) FROM yw_coupon WHERE isdel=0 AND userid=u.id) AS coupon,
        (SELECT COUNT(1) FROM yw_post WHERE isdel=0 AND userid=u.id) AS postsum,
        (SELECT COUNT(1) FROM yw_post WHERE isdel=0 AND userid=u.id AND isessence=1) AS isessencesum
        FROM yw_user u LEFT JOIN yw_autonym_authentication aut ON aut.userid=u.id WHERE u.id IN
        (SELECT userid FROM yw_follow_circle fc WHERE fc.circleid=#{circleid,jdbcType=INTEGER} AND u.status=0 AND
        u.phone IS NOT NULL AND <![CDATA[ (fc.userid > 20000 OR fc.userid < 10000) ]]>
        <if test="type!=null">
            AND date(fc.intime) = curdate()
        </if>
        )
    </select>

    <update id="updateUserPoints" parameterType="java.util.Map">
        UPDATE yw_user SET points=points+#{integral,jdbcType=INTEGER} WHERE id=#{userid,jdbcType=INTEGER}
    </update>

    <select id="queryUserUseIntegral" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT point FROM yw_points_record
        WHERE userid=#{userid,jdbcType=INTEGER} AND isadd=1 AND isdel=0 AND type=21 AND orderid=#{orderid,jdbcType=INTEGER}
    </select>

    <select id="queryUserByRewarde" resultType="int" parameterType="int">
      select points from yw_user WHERE id=#{userid,jdbcType=INTEGER}
    </select>

    <update id="updateUserPoint" parameterType="java.util.Map">
        UPDATE yw_user
        <if test="type==0">
            SET points=points+#{integral,jdbcType=INTEGER}
        </if>
        <if test="type==1">
            SET points=points-#{integral,jdbcType=INTEGER}
        </if>
        WHERE id=#{userid,jdbcType=INTEGER}
    </update>

    <select id="selectUserByThirdAccount" parameterType="java.util.Map"
            resultType="com.movision.mybatis.user.entity.User">
        select *
        from yw_user
        <where>
            <if test="qq!=null and qq!=''">
                AND qq = #{qq}
            </if>
            <if test="wx!=null and wx!=''">
                and openid = #{wx}
            </if>
            <if test="wb!=null and wb!=''">
                and sina = #{wb}
            </if>
        </where>
    </select>

    <select id="selectLoginUserByToken" parameterType="java.lang.String"
            resultType="com.movision.mybatis.user.entity.LoginUser">
        select
        u.*, i.accid, i.token as imtoken
        from yw_user u
        LEFT JOIN yw_im_user i on u.id= i.userid AND i.type = 1
        <where>
            <if test="token != null || token != ''">
                u.token = #{token}
            </if>
        </where>
    </select>

    <select id="selectLoginuserByUserid" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.user.entity.LoginUser">
        select
        u.*, i.accid, i.token as imtoken
        from yw_user u
        LEFT JOIN yw_im_user i on u.id= i.userid AND i.type = 1
        <where>
            <if test="id != null || id != ''">
                u.id = #{id}
            </if>
        </where>
    </select>

    <select id="countByNickname" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select count(1)
        from yw_user
        where nickname = #{nickname}
        and id <![CDATA[ <> ]]> #{userid}
    </select>

    <select id="queryUserIsVip" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT level FROM yw_user WHERE id=#{loginid,jdbcType=INTEGER}
    </select>

    <select id="queryUserRole" resultType="com.movision.mybatis.user.entity.UserRole" parameterType="java.lang.Integer">
        SELECT u.id AS userid,au.iscircle,au.circlemanagement,au.contributing,au.common
        FROM yw_user u LEFT JOIN yw_admin_user au ON u.phone=au.phone WHERE u.id=#{loginid,jdbcType=INTEGER}
    </select>

    <select id="queryCountByNickname" parameterType="java.lang.String" resultType="java.lang.Integer">
        select COUNT(1) from yw_user where nickname = #{nickname}
    </select>

    <select id="queryUserIsCricle" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT u.id FROM yw_user u LEFT JOIN yw_admin_user au ON au.phone = u.phone WHERE au.id = #{userid}
    </select>
    <select id="findUser" parameterType="java.lang.Integer" resultType="com.movision.mybatis.user.entity.UserLike">
        SELECT  * FROM  yw_user WHERE id=#{userid,jdbcType=INTEGER}
    </select>
    <update id="updateUserHeatValue" parameterType="java.util.Map">
        UPDATE yw_user SET heat_value=heat_value+#{points,jdbcType=INTEGER} WHERE id=#{userid,jdbcType=INTEGER}
    </update>
    <select id="queryUserLevel" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT points FROM yw_user WHERE id=#{userid,jdbcType=INTEGER} AND status=0
    </select>
    <select id="queryUserPoints" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT level FROM yw_user WHERE id=#{userid,jdbcType=INTEGER} AND status=0
    </select>
    <select id="queryUserInfoHompage" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.*, i.accid FROM yw_user u
        LEFT JOIN yw_im_user i on u.id = i.userid
        where u.id = #{userid,jdbcType=INTEGER}
        and i.type = 1
    </select>

    <!--2.0查询当前用户关注的所有作者列表-->
    <select id="findAllMineFollowAuthor" parameterType="java.util.Map"
            resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id, u.nickname, u.photo, u.fans,
          (SELECT count(*) FROM yw_post WHERE userid = u.id AND isdel = '0') AS postsum,
          (SELECT count(*) FROM yw_follow_user WHERE userid = #{userid,jdbcType=INTEGER} AND interestedusers = u.id) AS isfollow,
          fu.intime as intime
        FROM yw_user u
        JOIN yw_follow_user fu ON u.id = fu.interestedusers
        WHERE u.status = 0
        AND fu.userid = #{userid,jdbcType=INTEGER}
        AND u.id != #{userid,jdbcType=INTEGER}
        ORDER  BY  intime DESC
    </select>

    <!--查询该作者有没有被当前登录的用户关注过-->
    <select id="queryIsFollowAuthor" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) FROM yw_follow_user WHERE userid = #{userid,jdbcType=INTEGER} AND interestedusers =
        #{id,jdbcType=INTEGER}
    </select>

    <!--2.0查询当前用户的所有粉丝列表-->
    <select id="findAllMineFans" parameterType="java.util.Map" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id, u.nickname, u.photo, u.fans,
          (SELECT count(*) FROM yw_post WHERE userid = u.id AND isdel = '0') AS postsum,
          (SELECT count(*) FROM yw_follow_user WHERE userid = #{userid,jdbcType=INTEGER} AND interestedusers = u.id) AS isfollow
        FROM yw_user u
        JOIN yw_follow_user fu ON u.id = fu.userid
        WHERE u.status = 0
        AND fu.interestedusers = #{userid,jdbcType=INTEGER}
        AND u.id != #{userid,jdbcType=INTEGER}
    </select>

    <select id="findAllMostFansAuthorInAll" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT id, nickname, photo, fans
        FROM yw_user
        WHERE STATUS = 0 AND <![CDATA[ (id > 20000 OR id < 10000)]]>
        ORDER BY fans DESC
    </select>

    <select id="findAllMostFansAuthorInCurrentMonth" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id, u.nickname, u.photo, u.fans
        FROM yw_user u
        JOIN yw_follow_user fu ON u.id = fu.interestedusers
        WHERE u.status = 0 AND <![CDATA[ (u.id > 20000 OR u.id < 10000) ]]>
        AND DATE_FORMAT( fu.intime, '%Y%m' ) = DATE_FORMAT( CURDATE() , '%Y%m' )
        GROUP BY u.id
        ORDER BY u.fans DESC
    </select>

    <select id="findAllMostCommentAuthorInAll" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id, u.nickname, u.photo, COUNT(c.id) AS commentsum
        FROM yw_user u
        LEFT JOIN yw_post_comment c ON u.id = c.userid
        WHERE u.status = 0
        AND <![CDATA[ (u.id > 20000 OR u.id < 10000) ]]>
        AND c.isdel = 0
        AND c.status = 1
        GROUP BY u.id
        ORDER BY commentsum DESC
    </select>

    <select id="findAllMostCommentAuthorInCurrentMonth" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id, u.nickname, u.photo, COUNT(c.id) AS commentsum
        FROM yw_user u
        LEFT JOIN yw_post_comment c ON u.id = c.userid
        WHERE u.status = 0
        AND <![CDATA[ (u.id > 20000 OR u.id < 10000) ]]>
        AND c.isdel = 0
        AND c.status = 1
        AND DATE_FORMAT( c.intime, '%Y%m' ) = DATE_FORMAT( CURDATE() , '%Y%m' )
        GROUP BY u.id
        ORDER BY commentsum DESC
    </select>

    <select id="findAllMostPostAuthorInAll" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id, u.nickname, u.photo, COUNT(p.id) AS postsum
        FROM yw_user u
        LEFT JOIN yw_post p ON u.id = p.userid
        WHERE u.status = 0
        AND <![CDATA[ (u.id > 20000 OR u.id < 10000) ]]>
        AND p.isdel = 0 AND p.isactive = 0
        GROUP BY u.id
        ORDER BY postsum DESC
    </select>

    <select id="findAllMostPostAuthorInCurrentMonth" resultType="com.movision.mybatis.user.entity.UserVo">
        SELECT u.id, u.nickname, u.photo, COUNT(p.id) AS postsum
        FROM yw_user u
        LEFT JOIN yw_post p ON u.id = p.userid
        WHERE u.status = 0
        AND <![CDATA[ (u.id > 20000 OR u.id < 10000) ]]>
        AND p.isdel = 0 AND p.isactive = 0
        AND DATE_FORMAT( p.intime, '%Y%m' ) = DATE_FORMAT( CURDATE() , '%Y%m' )
        GROUP BY u.id
        ORDER BY postsum DESC
    </select>

    <select id="queryUserIsrecommend" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT isrecommend FROM yw_user WHERE id = #{id,jdbcType=INTEGER} AND status = 0
    </select>

    <select id="queryInviteNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM yw_user WHERE referrals = (
          SELECT invitecode FROM yw_user WHERE id = #{userid,jdbcType=INTEGER}
        )
    </select>

    <select id="queryFinishUserInfo" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM yw_user
        WHERE id = #{userid,jdbcType=INTEGER}
          AND photo IS NOT NULL
          AND nickname IS NOT NULL
          AND sex IS NOT NULL
          AND birthday IS NOT NULL
    </select>

    <!--查询当前用户邀请的好友列表-->
    <select id="findAllMyInviteList" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.user.entity.InviteUserVo">
        SELECT id, nickname, photo FROM yw_user WHERE referrals = (
          SELECT invitecode FROM yw_user WHERE id = #{userid,jdbcType=INTEGER}
        )
    </select>

    <!--查询我的模块邀请好友页面里的邀请好友排行榜数据-->
    <select id="findAllInviteRank" resultType="com.movision.mybatis.user.entity.InviteUserVo">
        SELECT t2.id, t2.nickname, t2.photo, t2.invitecode, t2.referrals, t1.invitenum
        FROM yw_user_invite_rank t1
        LEFT JOIN yw_user t2 ON t1.userid = t2.id
        WHERE t2.id != '-1'
        ORDER BY invitenum DESC
    </select>

    <update id="updateUserByIsrecommend" parameterType="com.movision.mybatis.user.entity.User">
        UPDATE yw_user
        SET isrecommend = #{isrecommend,jdbcType=INTEGER}
        WHERE id=#{id,jdbcType=INTEGER} AND status = 0
    </update>

    <select id="queryUserByName" parameterType="java.lang.String" resultType="com.movision.mybatis.user.entity.User">
        select id, nickname, photo from yw_user
        where status = 0
        AND <![CDATA[ (id > 20000 OR id < 10000) ]]>
        and nickname like concat('%',#{nickname,jdbcType=VARCHAR},'%')
        limit 4
    </select>

    <select id="findAllUserByName" parameterType="java.util.Map" resultType="com.movision.mybatis.user.entity.User">
        select * from yw_user
        where status = 0
        AND <![CDATA[ (id > 20000 OR id < 10000) ]]>
        and nickname like concat('%',#{name,jdbcType=VARCHAR},'%')
    </select>

    <!--统计当前用户足迹点总数-->
    <select id="getfootmap" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM yw_post_label
        WHERE type = '0' AND isdel = '0'
        AND id IN (
        SELECT DISTINCT labelid FROM yw_post_label_relation WHERE postid IN (
        SELECT id FROM yw_post WHERE userid = #{userid,jdbcType=INTEGER}
        )
        )
    </select>
    <select id="areaname" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT name FROM yw_city WHERE code=#{ip_city,jdbcType=VARCHAR}
    </select>
    <select id="provicename" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT name FROM yw_province WHERE code=(
SELECT provincecode FROM yw_city WHERE code=#{ip_city,jdbcType=VARCHAR})
    </select>

    <select id="selectIntervalBetweenLoginAndRegiste" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        t.*
        FROM
        (
        SELECT
        id,
        #{loginTime} as login_time,
        intime,
        UNIX_TIMESTAMP(#{loginTime}) - UNIX_TIMESTAMP(intime) AS d
        FROM
        yw_user
        ) t
        WHERE
        <![CDATA[  t.d < 10  ]]>
        AND t.id = #{userid};
    </select>

    <!-- 查找最大的机器人id -->
    <select id="selectMaxRobotId" resultType="java.lang.Integer">
        select max(id)
        from yw_user u
        where
        <![CDATA[ u.id <=20000 AND u.id >= 10000
        ]]>
    </select>

    <!-- 查询所有机器人用户 -->
    <select id="selectRobotUser" resultType="com.movision.mybatis.user.entity.User">
        SELECT *
        FROM yw_user u where
        <![CDATA[ u.id <= 20000 AND u.id >= 10000
        ]]>
    </select>

    <!-- 查询机器人列表 -->
    <select id="findAllQueryRobotByList" resultType="com.movision.mybatis.user.entity.User"
            parameterType="java.lang.String">
        SELECT *
        FROM yw_user u
        WHERE <![CDATA[ u.id<=20000 AND u.id >= 10000 ]]>
        <if test="name != null">
            AND nickname = #{name,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="queryRobotById" parameterType="java.lang.Integer" resultType="com.movision.mybatis.user.entity.User">
        SELECT * FROM yw_user WHERE id = #{id,jdbcType=INTEGER} AND status = 0
    </select>

    <!-- 随机查询机器人 -->
    <select id="queryRandomUser" resultType="com.movision.mybatis.user.entity.User" parameterType="java.lang.Integer">
        <![CDATA[

        SELECT * FROM yw_user u where u.id<=20000 AND u.id >= 10000 ORDER BY RAND() LIMIT 0,#{number,jdbcType=INTEGER}

        ]]>
    </select>

    <!-- 查询不重复收藏帖子的机器人用户 -->
    <select id="queryNotRepeatCollectRobots" resultType="com.movision.mybatis.user.entity.User"
            parameterType="java.util.Map">
        SELECT u.* FROM yw_user u
        where <![CDATA[ u.id <=20000 AND u.id >= 10000 ]]>
        and not EXISTS
        (SELECT 1 FROM yw_collection c
        where c.userid = u.id and c.postid = #{postid})
        ORDER BY RAND() LIMIT 0,#{number}
    </select>

    <!-- 查询不重复点赞帖子的机器人用户 -->
    <select id="queryNotRepeatZanRobots" resultType="com.movision.mybatis.user.entity.User"
            parameterType="java.util.Map">
        SELECT u.* FROM yw_user u
        where <![CDATA[ u.id <= 20000 AND u.id >= 10000 ]]>
        and not EXISTS
        (SELECT 1 FROM yw_post_zan_record r
        where r.userid = u.id and r.postid = #{postid})
        ORDER BY RAND() LIMIT 0, #{number,jdbcType=INTEGER}
    </select>

    <!-- 查询不重复关注的用户机器人用户 -->
    <select id="queryNotRepeatRandomRobots" resultType="com.movision.mybatis.user.entity.User"
            parameterType="java.util.Map">
        SELECT u.* FROM yw_user u
        where <![CDATA[ u.id <= 20000 AND u.id >= 10000 ]]>
        and not EXISTS (SELECT 1 FROM yw_follow_user f
        where f.userid = u.id
        and f.interestedusers = #{userid})
        ORDER BY RAND() LIMIT 0,#{number}
    </select>

    <select id="selectNotLoadPhotoUser" resultType="com.movision.mybatis.user.entity.User">
        SELECT * FROM yw_user
        where photo = 'http://pic.mofo.shop/upload/person/img/logo%403x.png'
    </select>
    <update id="updateUserLevels" parameterType="java.util.Map">
        UPDATE yw_user SET level=#{le,jdbcType=INTEGER} WHERE id=#{userid,jdbcType=INTEGER}
    </update>

    <select id="queryUserBriskNumber" parameterType="java.util.Map" resultType="java.lang.Double">
        SELECT COUNT(id) FROM yw_user WHERE status = 0
        <if test="begin == null and end == null">
            <![CDATA[ AND login_time >= DATE_SUB(NOW(),INTERVAL 7 DAY) AND login_time <=DATE_FORMAT(NOW(),'%y-%m-%d')]]>
        </if>
        <if test="begin != null and end != null">
            <![CDATA[AND intime >= #{begin,jdbcType=TIMESTAMP} AND intime < DATE_ADD(#{end,jdbcType=TIMESTAMP},INTERVAL 1 DAY)]]>
        </if>
    </select>

    <select id="dauStatistic" resultType="com.movision.mybatis.user.entity.User" parameterType="java.util.Map">
        SELECT * FROM yw_user
        WHERE (phone NOT LIKE '%000000' OR phone IS NULL)
        <if test="begin == null and end == null">
            <![CDATA[ AND login_time >= DATE_SUB(NOW(),INTERVAL 7 DAY) AND login_time <=DATE_FORMAT(NOW(),'%y-%m-%d')]]>
        </if>
        <if test="begin != null and end != null">
            <![CDATA[AND login_time >= #{begin,jdbcType=TIMESTAMP} AND login_time < DATE_ADD(#{end,jdbcType=TIMESTAMP},INTERVAL 1 DAY)]]>
        </if>
    </select>

    <!--查询该用户前一天是否关注过圈子或标签或作者-->
    <select id="queryFollow" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM (
        SELECT id, userid FROM yw_follow_circle WHERE userid = #{id,jdbcType=INTEGER} AND intime between curdate()-INTERVAL 1 day  and CURDATE()
        UNION ALL
        SELECT id, userid FROM yw_follow_label WHERE userid = #{id,jdbcType=INTEGER} AND intime between curdate()-INTERVAL 1 day  and CURDATE()
        UNION ALL
        SELECT id, userid FROM yw_follow_user WHERE userid = #{id,jdbcType=INTEGER} AND intime between curdate()-INTERVAL 1 day  and CURDATE()
        ) t
    </select>

    <!--查询当前用户前一天中是否发过帖子-->
    <select id="queryPost" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM yw_post WHERE userid = #{id,jdbcType=INTEGER} AND intime between curdate()-INTERVAL 1 day  and CURDATE()
    </select>

    <!--查询该用户前一天中是否点赞过帖子或评论-->
    <select id="queryZan" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM (
        SELECT id, userid FROM yw_post_zan_record WHERE userid = #{id,jdbcType=INTEGER} AND intime between curdate()-INTERVAL 1 day  and CURDATE()
        UNION ALL
        SELECT id, userid FROM yw_post_comment_zan_record WHERE userid = #{id,jdbcType=INTEGER} AND intime between curdate()-INTERVAL 1 day  and CURDATE()
        ) t
    </select>

    <!--查询该用户前一天中是否收藏过帖子-->
    <select id="queryCollect" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM yw_collection WHERE userid = #{id,jdbcType=INTEGER} AND collect_time between curdate()-INTERVAL 1 day  and CURDATE()
    </select>


    <!--查询该用户前一天中是否评论过帖子或回复过评论-->
    <select id="queryComment" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM yw_post_comment WHERE userid = #{id,jdbcType=INTEGER} AND intime between curdate()-INTERVAL 1 day  and CURDATE()
    </select>


    <!--查询该用户前一天中是否转发过帖子-->
    <select id="queryForward" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM yw_post_share WHERE userid = #{id,jdbcType=INTEGER} AND intime between curdate()-INTERVAL 1 day  and CURDATE()
    </select>

</mapper>