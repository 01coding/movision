<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhuhuibao.mybatis.memCenter.mapper.ResumeMapper" >
  <resultMap id="BaseResultMap" type="com.zhuhuibao.mybatis.memCenter.entity.Resume" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="createid" property="createid" jdbcType="VARCHAR" />
    <result column="publishTime" property="publishTime" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="VARCHAR" />
    <result column="jobNature" property="jobNature" jdbcType="VARCHAR" />
    <result column="post" property="post" jdbcType="VARCHAR" />
    <result column="parentId" property="parentId" jdbcType="VARCHAR" />
    <result column="jobProvince" property="jobProvince" jdbcType="VARCHAR" />
    <result column="jobCity" property="jobCity" jdbcType="VARCHAR" />
    <result column="jobArea" property="jobArea" jdbcType="VARCHAR" />
    <result column="hopeSalary" property="hopeSalary" jdbcType="VARCHAR" />
    <result column="curSalary" property="curSalary" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="realName" property="realName" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="workYear" property="workYear" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="experienceYear" property="experienceYear" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="positionName" property="positionName" jdbcType="VARCHAR" />
    <result column="birthYear" property="birthYear" jdbcType="VARCHAR" />
    <result column="marriage" property="marriage" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="liveProvince" property="liveProvince" jdbcType="VARCHAR" />
    <result column="liveCity" property="liveCity" jdbcType="VARCHAR" />
    <result column="liveArea" property="liveArea" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="jobExperience" property="jobExperience" jdbcType="VARCHAR" />
    <result column="projectExperience" property="projectExperience" jdbcType="VARCHAR" />
    <result column="eduExperience" property="eduExperience" jdbcType="VARCHAR" />
    <result column="attach" property="attach" jdbcType="VARCHAR" />
    <result column="isPublic" property="isPublic" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMap" type="com.zhuhuibao.common.ResultBean" >
    <id column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, createid, publishTime, updateTime, jobNature, post, jobProvince, jobCity,
    jobArea, hopeSalary, curSalary, status, realName, userName, sex, workYear, education,
    experienceYear, company, positionName, birthYear, marriage, mobile, email, liveProvince,
    liveCity, liveArea, photo, jobExperience, projectExperience, eduExperience, attach,isPublic
  </sql>
  <insert id="setUpResume" parameterType="com.zhuhuibao.mybatis.memCenter.entity.Resume" >
    insert into t_i_resume (id, title, createid, publishTime, updateTime, jobNature,
    post, jobProvince, jobCity, jobArea, hopeSalary, curSalary, status, realName, userName,
    sex, workYear, education, experienceYear, company, positionName, birthYear, marriage, mobile,
    email, liveProvince, liveCity, liveArea, photo, jobExperience, projectExperience, eduExperience, attach,isPublic
    )
    values (#{id}, #{title}, #{createid},
    now(), now(), #{jobNature},#{post}, #{jobProvince}, #{jobCity},#{jobArea},
    #{hopeSalary}, #{curSalary},#{status}, #{realName}, #{userName},#{sex}, #{workYear}, #{education},
    #{experienceYear}, #{company}, #{positionName}, #{birthYear}, #{marriage}, #{mobile},
    #{email}, #{liveProvince}, #{liveCity}, #{liveArea}, #{photo}, #{jobExperience},
    #{projectExperience}, #{eduExperience}, #{isPublic},1
    )
  </insert>

  <update id="updateResume" parameterType="com.zhuhuibao.mybatis.memCenter.entity.Resume" >
    update t_i_resume
    <set >
      <if test="title != null" >
        title = #{title},
      </if>
      <if test="createid != null" >
        createid = #{createid},
      </if>
      <if test="publishTime != null" >
        publishTime = #{publishTime},
      </if>
      updateTime = now(),
      <if test="jobNature != null" >
        jobNature = #{jobNature},
      </if>
      <if test="post != null" >
        post = #{post},
      </if>
      <if test="jobProvince != null" >
        jobProvince = #{jobProvince},
      </if>
      <if test="jobCity != null" >
        jobCity = #{jobCity},
      </if>
      <if test="jobArea != null" >
        jobArea = #{jobArea},
      </if>
      <if test="hopeSalary != null" >
        hopeSalary = #{hopeSalary},
      </if>
      <if test="curSalary != null" >
        curSalary = #{curSalary},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
      <if test="realName != null" >
        realName = #{realName},
      </if>
      <if test="userName != null" >
        userName = #{userName},
      </if>
      <if test="sex != null" >
        sex = #{sex},
      </if>
      <if test="workYear != null" >
        workYear = #{workYear},
      </if>
      <if test="education != null" >
        education = #{education},
      </if>
      <if test="experienceYear != null" >
        experienceYear = #{experienceYear},
      </if>
      <if test="company != null" >
        company = #{company},
      </if>
      <if test="positionName != null" >
        positionName = #{positionName},
      </if>
      <if test="birthYear != null" >
        birthYear = #{birthYear},
      </if>
      <if test="marriage != null" >
        marriage = #{marriage},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile},
      </if>
      <if test="email != null" >
        email = #{email},
      </if>
      <if test="liveProvince != null" >
        liveProvince = #{liveProvince},
      </if>
      <if test="liveCity != null" >
        liveCity = #{liveCity},
      </if>
      <if test="liveArea != null" >
        liveArea = #{liveArea},
      </if>
      <if test="photo != null" >
        photo = #{photo},
      </if>
      <if test="jobExperience != null" >
        jobExperience = #{jobExperience},
      </if>
      <if test="projectExperience != null" >
        projectExperience = #{projectExperience},
      </if>
      <if test="eduExperience != null" >
        eduExperience = #{eduExperience},
      </if>
      <if test="attach != null" >
        attach = #{attach},
      </if>
      <if test="isPublic != null" >
        isPublic = #{isPublic},
      </if>
    </set>
    where id = #{id}
  </update>
  <select id="searchMyResume" parameterType="java.lang.String" resultMap="BaseResultMap">
    select r.id,r.title,r.realName,(DATE_FORMAT( current_timestamp(),'%Y' )-r.birthYear)as birthYear,
    case when r.sex=1 then '男' when r.sex=0 then '女' end as sex,r.mobile,r.email,r.updateTime,
    (DATE_FORMAT( current_timestamp(),'%Y' )-r.workYear) as workYear,concat(c.name,a.name)AS liveArea,r.photo,r.isPublic
    from t_i_resume r
    left join t_dictionary_city c on r.liveCity = c.code
    left join t_dictionary_area a on r.liveArea = a.code
    where r.createid = #{id}
  </select>
  <select id="searchMyResumeAllInfo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select r.*,(select parentId from t_dictionary_position where find_in_set(id,r.post) group by parentId) as parentId
    FROM t_i_resume r
    where r.createid = #{id}
  </select>
  <select id="searchMyResumeJobType" parameterType="java.lang.String" resultMap="ResultMap">
    select group_concat(id) as code,parentId as name from(
    select id,parentId from t_dictionary_position where find_in_set(id,#{post}) )a
    group by a.parentId
  </select>
  <select id="previewResume" parameterType="java.lang.String" resultMap="BaseResultMap">
    select r.id,r.title,r.realName,r.birthYear,dc.name education,
    case when r.sex=1 then '男' when r.sex=0 then '女' end as sex,r.mobile,r.email,
    case WHEN r.marriage =0 then '未婚' WHEN r.marriage =1 THEN '已婚' WHEN r.marriage =2 THEN '保密' END AS marriage,
    (DATE_FORMAT( current_timestamp(),'%Y' )-r.workYear) as workYear,
    concat(p.name,c.name,a.name)AS liveArea,concat(ci.name,ar.name)AS jobArea,co.name as hopeSalary,
    r.jobExperience,r.projectExperience,r.eduExperience,r.attach,con.name AS status,
    (select Group_concat(name) from t_dictionary_constant where find_in_set(code,r.jobNature) and type=7)AS jobNature,
    (select Group_concat(name) from t_dictionary_position where find_in_set(id,r.post))AS post
    from t_i_resume r
    LEFT JOIN t_dictionary_province p on r.liveProvince = p.code
    left join t_dictionary_city c on r.liveCity = c.code
    left join t_dictionary_area a on r.liveArea = a.code
    left join t_dictionary_city ci on r.jobCity = ci.code
    left join t_dictionary_area ar on r.jobArea = ar.code
    left join t_dictionary_constant co on co.code = r.hopeSalary
    left join t_dictionary_constant con on con.code = r.status
    left join t_dictionary_constant dc on dc.code = r.education
    where r.id = #{id} and co.type =1 and con.type = 6 and dc.type = 2
  </select>
  <select id="findAllResume" parameterType="java.util.Map" resultMap="BaseResultMap">
    select tr.* from (select t.id,t.title,t.realName,ct.name jobCity,dc.name hopeSalary,t.photo,dt.name,t.publishTime,t.experienceYear,t.education,
    (DATE_FORMAT( current_date(),'%Y' )-birthYear) birthYear,
    (DATE_FORMAT( current_date(),'%Y' )-workYear) workYear,
    (select Group_concat(name) from t_dictionary_constant where find_in_set(code,t.jobNature) and type=7)AS jobNature,
    (select Group_concat(name) from t_dictionary_position where find_in_set(id,t.post))AS post
    from t_i_resume t
    left join t_dictionary_city ct on ct.code = t.jobCity
    left join t_dictionary_constant dc on dc.code = t.hopeSalary
    left join t_dictionary_constant dt on dt.code = t.education
    where dc.type = 1 and dt.type =2 ) tr
    <where>
      <if test="title != null and title != ''">
        and tr.post like concat('%',#{title},'%')
      </if>
      <if test="jobCity != null and jobCity != ''">
        and tr.jobCity = #{jobCity}
      </if>
      <if test="expYear != null and expYear != ''">
        and tr.experienceYear = #{expYear}
      </if>
      <if test="education != null and education != ''">
        and tr.education = #{education}
      </if>
    </where>
    order by tr.publishTime desc
  </select>
  <select id="findAllReceiveResume" parameterType="java.lang.String" resultMap="BaseResultMap">
    select r.id,j.name,r.realName,re.publishDate as publishTime ,c.name as experienceYear from t_i_resume r
    left join t_i_jobRelresume re on re.resumeID = r.id
    left join t_i_job j on j.id = re.jobID
    left join t_dictionary_constant c on c.code = r.experienceYear
    where re.jobID in (select id from t_i_job where createid=#{id}) and c.type = 3
  </select>
  <select id="searchResumeById" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * from t_i_resume WHERE id = #{id}
  </select>
  <select id="queryResumeByCreateId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT * from t_i_resume WHERE createid = #{id}
  </select>
  <select id="queryLatestResume" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select r.id,r.realName,(DATE_FORMAT( current_timestamp(),'%Y' )-r.birthYear)as birthYear,
    (DATE_FORMAT( current_timestamp(),'%Y' )-r.workYear) as workYear,c.name AS jobCity,r.photo,
    (select Group_concat(name) from t_dictionary_position where find_in_set(id,r.post))AS post,
    CASE WHEN r.status=1 or r.status=2 or r.status=3 THEN '在职' WHEN r.status=4 THEN '离职' END AS status
    from t_i_resume r
    left join t_dictionary_city c on r.jobCity = c.code
    WHERE r.isPublic = 1 ORDER by r.publishTime limit 0,#{count}
  </select>
</mapper>