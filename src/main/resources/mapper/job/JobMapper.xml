<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhuhuibao.mybatis.memCenter.mapper.JobMapper" >
  <resultMap id="BaseResultMap" type="com.zhuhuibao.mybatis.memCenter.entity.Job" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="createid" property="createid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="publishTime" property="publishTime" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="VARCHAR" />
    <result column="positionType" property="positionType" jdbcType="VARCHAR" />
    <result column="positionTypeName" property="positionTypeName" jdbcType="VARCHAR" />
    <result column="parentId" property="parentId" jdbcType="VARCHAR" />
    <result column="enterpriseName" property="enterpriseName" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="INTEGER" />
    <result column="salaryName" property="salaryName" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="workArea" property="workArea" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="INTEGER" />
    <result column="experience" property="experience" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="welfare" property="welfare" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="superior" property="superior" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="profession" property="profession" jdbcType="VARCHAR" />
    <result column="is_deleted" property="is_deleted" jdbcType="INTEGER" />
  </resultMap>
  <insert id="publishPosition" parameterType="com.zhuhuibao.mybatis.memCenter.entity.Job" >
    insert into t_i_job (id, createid, publishTime, updateTime, name, salary, province, city, area,
      education, experience, age, description, welfare, department, superior, number, profession,is_deleted,positionType
      )
    values (#{id}, #{createid}, now(), now(), #{name}, #{salary}, #{province}, #{city}, #{area}, #{education},
      #{experience}, #{age}, #{description}, #{welfare}, #{department}, #{superior}, #{number}, #{profession},0,#{positionType}
      )
  </insert>
  <select id="findAllByPager" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT j.id,j.name,co.name as salaryName,concat(p.name,c.name,a.name)as workArea,j.publishTime FROM t_i_job j
    LEFT JOIN t_dictionary_constant co on j.salary = co.code
    LEFT JOIN t_dictionary_province p on j.province = p.code
    LEFT JOIN t_dictionary_city c on j.city = c.code
    LEFT JOIN t_dictionary_area a on j.area = a.code
    WHERE j.createid = #{id} and j.is_deleted = 0 and co.type = 1 order by j.updateTime desc
  </select>
  <select id="getPositionByPositionId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT j.*,p.parentId FROM t_i_job j
    LEFT JOIN t_dictionary_position p on j.positionType = p.id
    WHERE j.id = #{id}
  </select>
  <update id="deletePosition" parameterType="com.zhuhuibao.mybatis.memCenter.entity.Job" >
    UPDATE t_i_job SET is_deleted = 1 WHERE id = #{id}
  </update>
  <update id="updatePosition" parameterType="com.zhuhuibao.mybatis.memCenter.entity.Job" >
    update t_i_job
    <set >
      <if test="createid != null" >
        createid = #{createid},
      </if>
      <if test="publishTime != null" >
        publishTime = #{publishTime},
      </if>
      updateTime = now(),
      <if test="name != null" >
        name = #{name},
      </if>
      <if test="salary != null" >
        salary = #{salary},
      </if>
      <if test="province != null" >
        province = #{province},
      </if>
      <if test="city != null" >
        city = #{city},
      </if>
      <if test="area != null" >
        area = #{area},
      </if>
      <if test="education != null" >
        education = #{education},
      </if>
      <if test="experience != null" >
        experience = #{experience},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description},
      </if>
      <if test="welfare != null" >
        welfare = #{welfare},
      </if>
      <if test="department != null" >
        department = #{department},
      </if>
      <if test="superior != null" >
        superior = #{superior},
      </if>
      <if test="number != null" >
        number = #{number},
      </if>
      <if test="profession != null" >
        profession = #{profession},
      </if>
      <if test="is_deleted != null" >
        is_deleted = #{is_deleted},
      </if>
      <if test="positionType != null" >
        positionType = #{positionType}
      </if>
    </set>
    where id = #{id}
  </update>
  <select id="searchNewPosition" resultMap="BaseResultMap">
    select j.id,j.publishTime,j.name,c.name as city,co.name as salaryName,m.enterpriseName,j.createid,j.positionType,
    (select group_concat(name) from t_dictionary_constant where find_in_set(code,j.welfare) and type=5 ) as welfare
    from t_i_job j
    left join t_dictionary_city c on c.code = j.city
    left join t_dictionary_constant co on co.code = j.salary
    left join t_m_member m on m.id = j.createid
    where co.type = 1 and j.is_deleted = 0
    order by updateTime desc limit 0,#{count}
  </select>
  <select id="searchRecommendPosition" resultMap="BaseResultMap">
    select j.positionType,j.id,j.publishTime,j.updateTime,j.name,c.name as city,co.name as salaryName,m.enterpriseName,j.createid,
    (select group_concat(name) from t_dictionary_constant where find_in_set(code,j.welfare) and type=5 ) as welfare
    from t_i_job j
    left join t_dictionary_city c on c.code = j.city
    left join t_dictionary_constant co on co.code = j.salary
    left join t_m_member m on m.id = j.createid
    where co.type = 1 and j.is_deleted = 0 and find_in_set(j.positionType,(select post from t_i_resume where createid= #{id} ))
    order by updateTime desc limit 0,#{count}
  </select>
  <select id="searchSamePosition" resultType="java.util.Map" resultMap="BaseResultMap">
    select j.positionType,j.id,j.publishTime,j.name,j.createid,c.name as city,co.name as salaryName,m.enterpriseName,
    (select group_concat(name) from t_dictionary_constant where find_in_set(code,j.welfare) and type=5 ) as welfare
    from t_i_job j
    left join t_dictionary_city c on c.code = j.city
    left join t_dictionary_constant co on co.code = j.salary
    left join t_m_member m on m.id = j.createid
    where co.type = 1 and m.status != 2
    <if test="jobID != null and jobID != ''">
      and j.id != ${jobID}
    </if>
    <if test="delete != null">
      and j.is_deleted = #{delete}
    </if>
    <if test="postID != null">
      and j.positionType = #{postID}
    </if>
    order by updateTime desc limit ${count}
  </select>
  <select id="searchLatestPublishPosition" resultMap="BaseResultMap">
    select j.positionType,j.id,j.publishTime,j.name,c.name as city,co.name as salaryName,m.enterpriseName,j.createid,
    (select group_concat(name) from t_dictionary_constant where find_in_set(code,j.welfare) and type=5 ) as welfare
    from t_i_job j
    left join t_dictionary_city c on c.code = j.city
    left join t_dictionary_constant co on co.code = j.salary
    left join t_m_member m on m.id = j.createid
    where co.type = 1
    order by updateTime desc limit 0,5
  </select>
  <select id="queryCompanyInfo" parameterType="java.lang.Long" resultType="com.zhuhuibao.mybatis.memCenter.entity.MemberDetails">
    select t.id,t.enterpriseName,t.enterpriseLogo,t.enterpriseDesc,
    (select group_concat(name) from t_dictionary_constant where type=5 ) as welfare,
    concat(pv.name,ct.name,ar.name,t.address) address,ep.name enterpriseTypeName,es.name employeeNumber from t_m_member t
    left join t_dictionary_province pv on pv.code = t.province
    left join t_dictionary_city ct on ct.code = t.city
    left join t_dictionary_area ar on ar.code = t.area
    left join t_dictionary_enterpriseType ep on ep.id = t.enterpriseType
    left join t_dictionary_employeeSize es on es.id = t.employeeNumber
    left join t_i_job jb on jb.createid = t.id
    where t.id =  #{id} limit 1
  </select>

  <resultMap id="adList" type="java.util.LinkedHashMap">
    <result property="imgUrl" column="imgUrl" />
    <result property="id" column="id" />
  </resultMap>
  <select id="queryAdvertisingPosition" parameterType="java.util.Map" resultMap="adList">
    select t.imgUrl,t.linkUrl id from t_ad_advertising t where t.channelId = 1 and t.sort = 1
  </select>

  <select id="queryPositionInfoByID" parameterType="java.util.Map" resultType="java.util.Map">
    select t.id,t.createid,date_format(t.publishTime,'%Y-%m-%d') publishTime,date_format(t.updateTime,'%Y-%m-%d') updateTime,t.name,t.positionType,ps.name positionTypeName,t.description,
    t.department,t.superior,t.number,t.profession,mb.enterpriseName,mb.enterpriseDesc,
    (select cs.name from t_dictionary_constant cs where cs.code = t.salary and cs.type = 1)  salaryName,
    (select cs.name from t_dictionary_constant cs where cs.code = t.education and cs.type=2) as educationName,
    (select cs.name from t_dictionary_constant cs where cs.code = t.education and cs.type=3) as experienceName,
    (select cs.name from t_dictionary_constant cs where cs.code = t.education and cs.type=4) as ageName,
    (select group_concat(name) from t_dictionary_constant where find_in_set(code,t.welfare) and type=5 ) as welfare,
    concat(ct.name,ar.name) workArea,count(jrr.id) isApply from t_i_job t
    left join t_dictionary_position ps on ps.id = t.positionType
    left join t_dictionary_city ct on ct.code = t.city
    left join t_dictionary_area ar on ar.code = t.area
    left join t_m_member mb on mb.id = t.createid
    left join t_i_jobRelresume jrr on jrr.applicantId = #{createid} and jrr.jobID = #{id} and datediff(current_date(),jrr.publishDate) &lt;= 10
    where t.id = #{id}
  </select>

  <select id="findAllOtherPosition" parameterType="java.util.Map" resultMap="BaseResultMap">
    select job.id,job.createid,job.name,job.positionType,date_format(job.publishTime,'%Y-%m-%d') publishTime,
    date_format(job.updateTime,'%Y-%m-%d') updateTime,job.enterpriseName,job.salaryName,job.educationName,job.experienceName,job.welfare,job.workArea
    from (select t.id,t.createid,t.name,t.positionType,t.publishTime,
    t.updateTime,mb.enterpriseName,
    (select cs.name from t_dictionary_constant cs where cs.code = t.salary and cs.type = 1)  salaryName,
    (select cs.name from t_dictionary_constant cs where cs.code = t.education and cs.type=2) as educationName,
    (select cs.name from t_dictionary_constant cs where cs.code = t.education and cs.type=3) as experienceName,
    (select group_concat(name) from t_dictionary_constant where find_in_set(code,t.welfare) and type=5 ) as welfare,
    ct.name workArea
    from t_i_job t
    left join t_dictionary_city ct on ct.code = t.city
    left join t_dictionary_area ar on ar.code = t.area
    left join t_m_member mb on mb.id = t.createid
    WHERE t.is_deleted = 0 and mb.status != 2
      <if test="createID != null">
        and t.createid = #{createID}
      </if>
      <if test="jobID != null">
        and t.id != #{jobID}
      </if>
      <if test="name != null and name != ''">
        and (t.name like concat('%',#{name},'%') or mb.enterpriseName like concat('%',#{name},'%'))
      </if>
      <if test="positionType != null and positionType != ''">
        and t.positionType in (${positionType})
      </if>
      <if test="city != null and city != ''">
        and t.city = #{city}
      </if>
      <if test="employeeNumber != null and employeeNumber != ''">
        and mb.employeeNumber = #{employeeNumber}
      </if>
      <if test="enterpriseType != null and enterpriseType != ''">
        and mb.enterpriseType = #{enterpriseType}
      </if>
      <if test="publishTime != null and publishTime != ''">
        and date_format(#{publishTime},'%Y-%m-%d') &lt;= date_format(t.updateTime,'%Y-%m-%d')
      </if>
      <if test="salary != null and salary != ''">
        and salary = #{salary}
      </if>
     order by updateTime desc) job
  </select>

  <select id="findAllMyApplyPosition" parameterType="java.lang.String" resultType="com.zhuhuibao.mybatis.memCenter.entity.Job">
    select j.id,j.name, c.name as salaryName,ci.name as workArea,re.publishDate as publishTime,m.enterpriseName,
    (select group_concat(name) from t_dictionary_constant where find_in_set(code,j.welfare) and type=5 ) as welfare
    from t_i_job j
    left join t_i_jobRelresume re on re.jobID = j.id
    left join t_dictionary_constant c on j.salary = c.code
    LEFT JOIN t_dictionary_city ci on j.city = ci.code
    left join t_m_member m on m.id = j.createid
    where re.resumeID = (select id from t_i_resume where createid = #{id}) and c.type = 1
  </select>
  <select id="queryHotPosition" parameterType="java.util.Map" resultType="com.zhuhuibao.mybatis.memCenter.entity.Job">
    select j.id,j.name,j.positionType, c.name as salaryName,ci.name as workArea,j.publishTime,j.updateTime,m.enterpriseName,j.createid,
    (select group_concat(name) from t_dictionary_constant where find_in_set(code,j.welfare) and type=5 ) as welfare,m.enterpriseLogo
    from t_i_job j
    left join t_dictionary_constant c on j.salary = c.code
    LEFT JOIN t_dictionary_city ci on j.city = ci.code
    left join t_m_member m on m.id = j.createid
    <where>
    <if test="salary != null">
      and c.type = #{salary}
    </if>
    <if test="delete != null">
      and j.is_deleted = #{delete}
    </if>
    <if test="status != null">
      and m.status != #{status}
    </if>
    </where>
    order by j.views desc limit 0,#{count}
  </select>
  <select id="queryLatestJob" resultType="com.zhuhuibao.mybatis.memCenter.entity.Job">
    select j.id,j.name,j.positionType,ci.name as city, c.name as salaryName,j.createid from t_i_job j
    left join t_dictionary_position p on j.positionType = p.id
    left join t_dictionary_city ci on ci.code = j.city
    left join t_dictionary_constant c on j.salary = c.code
    left join t_m_member mb on mb.id = j.createid
    where p.parentId = #{id} and c.type = 1 and j.is_deleted =0 and mb.status != 2
    order by j.updateTime desc limit 0,#{count}
  </select>
  <select id="greatCompanyPosition" resultType="com.zhuhuibao.common.pojo.ResultBean">
    select distinct m.id as code,m.enterpriseLogo as name from t_i_job j
    left join t_m_member m on j.createid = m.id
    where m.isrecommend = 1
  </select>
  <update id="updateViews" parameterType="java.lang.Long" >
    UPDATE t_i_job SET views=views+1 WHERE id = #{id}
  </update>
<!--  <select id="querySimilarCompany" resultType="com.zhuhuibao.mybatis.memCenter.entity.Job">
    SELECT j.createid
    FROM t_i_job j
    LEFT JOIN t_m_member m on j.createid = m.id
    WHERE FIND_IN_SET(j.positionType,(
    SELECT GROUP_CONCAT(A.positionType) AS positionType
    FROM
    (
    SELECT positionType
    FROM t_i_job
    WHERE createid = #{id} and is_deleted = 0
    GROUP BY positionType)A)) and j.createid != #{id} and j.is_deleted = 0 and m.enterpriseType = #{enterpriseType} group by j.createid limit 0,#{count}
  </select>-->
    <select id="querySimilarCompany" resultType="com.zhuhuibao.mybatis.memCenter.entity.Job">
      select distinct A.createid from ((SELECT j.createid FROM t_i_job j
        WHERE FIND_IN_SET(j.positionType,(
        SELECT GROUP_CONCAT(A.positionType) AS positionType
        FROM
        (
            SELECT positionType
            FROM t_i_job
            WHERE createid = #{id} and is_deleted = 0
            GROUP BY positionType)A
         )
    )and j.createid != #{id} and j.is_deleted = 0) union all
    (select t.createid from t_i_job t left join t_m_member m on m.id = t.createid where m.enterpriseType = #{enterpriseType} and t.createid !=#{id} and t.is_deleted = 0)union all
    (select t.createid from t_i_job t left join t_m_member m on m.id = t.createid where m.employeeNumber = #{employeeNumber} and t.createid !=#{id} and t.is_deleted = 0)union all
    (select t.createid from t_i_job t left join t_m_member m on m.id = t.createid where t.createid != #{id} and t.is_deleted = 0 order by t.views desc))A limit 0,#{count}
  </select>
  <select id="querySimilarCompanyInfo" resultType="com.zhuhuibao.mybatis.memCenter.entity.Job">
    select c.name as city,m.enterpriseName,count(*)as size from t_i_job j
    left join t_m_member m on m.id = j.createid
    LEFT join t_dictionary_city c on c.code = m.city
    where j.createid=#{id} and j.is_deleted = 0
  </select>
  <select id="queryEnterpriseHotPosition" parameterType="java.util.Map" resultType="com.zhuhuibao.mybatis.memCenter.entity.Job">
    select jb.id,jb.createid,co.name as salaryName,jb.name,jb.positionType from t_i_job jb left join t_m_member m on jb.createid = m.id
    left join t_dictionary_constant co on co.code = jb.salary and co.type = 1
    where m.isrecommend = #{recommend} and m.status != #{status} and jb.is_deleted = 0 order by jb.views desc limit #{count}
  </select>
  <select id="findJobByID" resultType="java.util.Map">
    select * from t_i_job where id= #{id}
  </select>
  <select id="queryPublishJobCity" parameterType="java.util.Map" resultType="java.util.Map">
    select distinct(t.city) cityCode,ct.name cityName from t_i_job t
    left join t_dictionary_city ct on ct.code = t.city
    where t.createid = #{enterpriseID}
  </select>
</mapper>