<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movision.mybatis.postCommentAccusation.mapper.PostCommentAccusationMapper">
    <resultMap id="BaseResultMap" type="com.movision.mybatis.postCommentAccusation.entity.PostCommentAccusation">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="userid" jdbcType="INTEGER" property="userid"/>
        <result column="commentid" jdbcType="INTEGER" property="commentid"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="intime" jdbcType="TIMESTAMP" property="intime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, userid, commentid, comment, type, intime
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from yw_post_comment_accusation
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yw_post_comment_accusation
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.movision.mybatis.postCommentAccusation.entity.PostCommentAccusation">
    insert into yw_post_comment_accusation (id, userid, commentid, 
      comment, type, intime
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{commentid,jdbcType=INTEGER}, 
      #{comment,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{intime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective"
            parameterType="com.movision.mybatis.postCommentAccusation.entity.PostCommentAccusation">
        insert into yw_post_comment_accusation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="commentid != null">
                commentid,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="intime != null">
                intime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="commentid != null">
                #{commentid,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="intime != null">
                #{intime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.movision.mybatis.postCommentAccusation.entity.PostCommentAccusation">
        update yw_post_comment_accusation
        <set>
            <if test="userid != null">
                userid = #{userid,jdbcType=INTEGER},
            </if>
            <if test="commentid != null">
                commentid = #{commentid,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="intime != null">
                intime = #{intime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.movision.mybatis.postCommentAccusation.entity.PostCommentAccusation">
    update yw_post_comment_accusation
    set userid = #{userid,jdbcType=INTEGER},
      commentid = #{commentid,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      intime = #{intime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>