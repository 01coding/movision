<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.movision.mybatis.postCommentZanRecord.mapper.PostCommentZanRecordMapper">
    <resultMap id="BaseResultMap" type="com.movision.mybatis.postCommentZanRecord.entity.PostCommentZanRecord">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userid" property="userid" jdbcType="INTEGER"/>
        <result column="commentid" property="commentid" jdbcType="INTEGER"/>
        <result column="intime" property="intime" jdbcType="TIMESTAMP"/>
        <result column="isread" property="isread" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, userid, commentid, intime
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from yw_post_comment_zan_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from yw_post_comment_zan_record
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.movision.mybatis.postCommentZanRecord.entity.PostCommentZanRecord">
        insert into yw_post_comment_zan_record (id, userid, commentid,
        intime,isread)
        values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{commentid,jdbcType=INTEGER},
        #{intime,jdbcType=TIMESTAMP},#{isread,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.movision.mybatis.postCommentZanRecord.entity.PostCommentZanRecord">
        insert into yw_post_comment_zan_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="commentid != null">
                commentid,
            </if>
            <if test="intime != null">
                intime,
            </if>
            <if test="isread != null">
                isread,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="commentid != null">
                #{commentid,jdbcType=INTEGER},
            </if>
            <if test="intime != null">
                #{intime,jdbcType=TIMESTAMP},
            </if>
            <if test="isread != null">
                #{isread,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.movision.mybatis.PostZanRecord.entity.ZanRecordVo">
        update yw_post_comment_zan_record
        <set>
            <if test="userid != null">
                userid = #{userid,jdbcType=INTEGER},
            </if>
            <if test="commentid != null">
                commentid = #{commentid,jdbcType=INTEGER},
            </if>
            <if test="intime != null">
                intime = #{intime,jdbcType=TIMESTAMP},
            </if>
            <if test="isread!=null">
                isread=#{isread,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.movision.mybatis.postCommentZanRecord.entity.PostCommentZanRecord">
        update yw_post_comment_zan_record
        set userid = #{userid,jdbcType=INTEGER},
        commentid = #{commentid,jdbcType=INTEGER},
        intime = #{intime,jdbcType=TIMESTAMP},
        isread=#{isread,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="queryComment" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.comment.entity.CommentVo">
        SELECT t.content FROM yw_post_comment t
        WHERE t.id=#{commentid,jdbcType=INTEGER}
    </select>

    <select id="queryusers" parameterType="java.lang.Integer" resultType="com.movision.mybatis.user.entity.User">
        SELECT nickname,photo,id FROM yw_user WHERE id=#{userid,jdbcType=INTEGER}
    </select>
    <select id="queryPostNickname" parameterType="java.lang.Integer" resultType="java.lang.String">
SELECT u.nickname FROM yw_user u LEFT JOIN yw_post p ON p.userid=u.id WHERE p.id=#{postid,jdbcType=INTEGER}
</select>
    <select id="findZan" parameterType="java.lang.Integer"
            resultType="com.movision.mybatis.PostZanRecord.entity.ZanRecordVo">
        select t.* from (
        SELECT r.id,r.userid,r.commentid,null AS postid,r.intime
        FROM yw_post_comment_zan_record r
        left JOIN yw_post_comment c on r.commentid = c.id
        left join yw_post p on p.id = c.postid
        where c.userid = #{userid}
        and p.isdel = 0
        <![CDATA[    and r.userid <> c.userid ]]>
        UNION ALL
        SELECT d.id,d.userid,null AS commentid,d.postid,d.intime
        FROM yw_post_zan_record d
        LEFT JOIN yw_post p2 on p2.id = d.postid
        where p2.userid = #{userid}
        and p2.isdel = 0
        <![CDATA[   and d.userid <> p2.userid ]]>
        ) t ORDER BY t.intime DESC
    </select>
</mapper>