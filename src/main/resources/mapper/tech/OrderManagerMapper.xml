<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhuhuibao.mybatis.tech.mapper.OrderManagerMapper" >
  <select id="selectByPrimaryKey" resultType="java.util.Map" parameterType="java.util.Map" >
    select distinct t.orderNo,case when ur.mobile != '' or ur.mobile != null then ur.mobile when ur.email!= '' or ur.email != null then ur.email end as  buyername,
    t.amount, t.payAmount, date_format(t.dealTime,'%Y-%m-%d %H:%m:%s') dealTime,t.payMode,t.status,iv.invoiceType,
    iv.invoiceTitle,gd.goodsName,gd.goodsPrice,gd.number,date_format(pc.expiryDate,'%Y-%m-%d %H:%m:%s') expiryDate,
    date_format(pc.startTime,'%Y-%m-%d %H:%m:%s') startTime,date_format(pc.endTime,'%Y-%m-%d %H:%m:%s') endTime,pc.minBuyNumber,
    concat(po.name,ct.name,ar.name,pc.address) address,pc.price coursePrice,
    t.descriptions,pt.mobile
	 ,( select 
    case when (locate(';',co.imgUrl) > 0) then substring(co.imgUrl,1,locate(';',co.imgUrl)-1) when locate(';',co.imgUrl) = 0 then imgUrl end as imgUrl
    from t_p_group_publishCourse co where co.courseid=pt.courseId) as imgUrl 
    
     from t_o_order t
    left join t_m_member ur on ur.id = t.buyerId
    left join t_o_invoice iv on iv.orderNo = t.orderNo
    left join t_o_pwdticket pt on pt.orderNo = t.orderNo
    left join t_o_order_goods gd on gd.orderNo = t.orderNo
    left join t_p_group_publishCourse pc on pc.courseid = gd.goodsId
    left join t_dictionary_province po on po.code = pc.province
    left join t_dictionary_city ct on ct.code = pc.city
    left join t_dictionary_area ar on ar.code = pc.area
    <where>
      <if test="orderNo != null">
        and t.orderNo = #{orderNo}
      </if>
      <if test="goodsType != null">
        and t.goodsType = #{goodsType}
      </if>
    </where>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhuhuibao.mybatis.tech.entity.OrderOms" >
    update t_o_order
    <set >
      <if test="buyerId != null" >
        buyerId = #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        sellerId = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        payAmount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="dealTime != null" >
        dealTime = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payMode != null" >
        payMode = #{payMode,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="goodsType != null" >
        goodsType = #{goodsType,jdbcType=CHAR},
      </if>
      <if test="descriptions != null" >
        descriptions = #{descriptions,jdbcType=VARCHAR},
      </if>
    </set>
    where orderNo = #{orderNo,jdbcType=VARCHAR}
  </update>
  <select id="findAllOmsTechOrder" parameterType="java.util.Map" resultType="java.util.Map">
    select o.orderNo,gd.goodsName,gd.number,gd.goodsPrice,
    case when ur.mobile != '' or ur.mobile != null then ur.mobile when ur.email!= '' or ur.email != null then ur.email end as  buyername,
    o.amount,date_format(o.dealTime,'%Y-%m-%d %H:%i:%s') dealTime,o.status from t_o_order o
    left join t_o_order_goods gd on gd.orderNo = o.orderNo
    left join t_m_member ur on ur.id = o.buyerId
    <where>
      <if test="goodsName != null">
        and gd.goodsName like concat('%',#{goodsName},'%')
      </if>
      <if test="buyerName != null">
      and (ur.mobile like concat('%',#{buyerName},'%') or ur.email like concat('%',#{buyerName},'%'))
      </if>
      <if test="status != null">
        and o.status = #{status}
      </if>
      <if test="goodsType != null">
        and o.goodsType = #{goodsType}
      </if>
      <if test="buyerId != null">
        and o.buyerId = #{buyerId}
      </if>
    </where>
  </select>
</mapper>