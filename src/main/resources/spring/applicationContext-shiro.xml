<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">
    <description>安全配置</description>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="${password.algorithmName}"/>
        <property name="hashIterations" value="${password.hashIterations}"/>
    </bean>
    <!-- Realm实现 -->
    <bean id="userRealm" class="com.movision.shiro.realm.ShiroRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
    </bean>

    <!-- Realm实现运营管理系统 -->
    <bean id="omsRealm" class="com.movision.shiro.realm.BossRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
    </bean>

    <!-- 用户授权信息Cache, 采用EhCache
    <bean id="ehcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml"/>
    </bean>  -->

    <!--(12h)43200000 | (6h)21600000 | *(3h)10800000* | (10m)600000-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="10800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionDAO" ref="redisSessionDAO"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- shiro redisManager -->
    <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
        <property name="host" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="expire" value="${redis.expire}"/>
    </bean>

    <!-- redisSessionDAO -->
    <bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
        <property name="redisManager" ref="redisManager"/>
    </bean>

    <!-- cacheManager -->
    <bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="redisManager" ref="redisManager"/>
    </bean>

    <!--<bean id="cacheManager" class="com.movisionshiro.cache.SpringCacheManagerWrapper">-->
        <!--<property name="cacheManager" ref="redisCacheManager"/>-->
    <!--</bean>-->

    <!-- 安全管理器 配置权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="realm" ref="userRealm"/>-->
        <property name="realms">
            <list>
                <ref bean="userRealm"/>
                <ref bean="omsRealm"/>
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter"
          class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/auth/login.html"/>
    </bean>
    <bean id="orRolesAuthorizationFilter"
          class="com.movision.shiro.filter.OrRolesAuthorizationFilter">
    </bean>
    <bean id="orPermissionsAuthorizationFilter"
          class="com.movision.shiro.filter.OrPermissionsAuthorizationFilter">
    </bean>
    <!-- shiro定义 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/rest/exception/error_401"/>
        <property name="successUrl" value="/index.html"/>
        <property name="filters">
            <util:map>
                <!--需要登录-->
                <entry key="authc" value-ref="formAuthenticationFilter"/>

                <entry key="orroles" value-ref="orRolesAuthorizationFilter"/>
                <entry key="orperms" value-ref="orPermissionsAuthorizationFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!--url = orroles[status]
                status:会员状态 0：正常 1：异常封号-->

                <!--url = orperms[role:status]
                role:100 管理员(yw_user表和yw_admin_user表中共同的用户) 200 普通用户（yw_user表中的用户）
                status:0：正常 1：异常封号
                -->

                /rest/** = anon
                /app/** = anon
                /boss/** = anon

                /logout = logout
                /swagger/** = anon

            </value>
        </property>

    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans> 