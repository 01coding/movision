<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">
    <description>安全配置</description>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="${password.algorithmName}"/>
        <property name="hashIterations" value="${password.hashIterations}"/>
    </bean>
    <!-- Realm实现 -->
    <bean id="userRealm" class="com.zhuhuibao.shiro.realm.ShiroRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
    </bean>

    <!-- Realm实现运营管理系统 -->
    <bean id="omsRealm" class="com.zhuhuibao.shiro.realm.OMSRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
    </bean>

    <!-- 用户授权信息Cache, 采用EhCache -->
    <bean id="ehcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO" />
    </bean>

    <!-- shiro redisManager -->
    <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
        <property name="host" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="expire" value="${redis.expire}"/>
    </bean>

    <!-- redisSessionDAO -->
    <bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
        <property name="redisManager" ref="redisManager" />
    </bean>

    <!-- cacheManager -->
    <bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="redisManager" ref="redisManager" />
    </bean>

    <!-- 安全管理器 配置权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="realm" ref="userRealm"/>-->
        <property name="realms">
            <list>
                <ref bean="userRealm" />
                <ref bean="omsRealm" />
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter"
          class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/auth/login.html"/>
    </bean>
    <bean id="orRolesAuthorizationFilter"
          class="com.zhuhuibao.shiro.filter.OrRolesAuthorizationFilter">
    </bean>
    <bean id="orPermissionsAuthorizationFilter"
          class="com.zhuhuibao.shiro.filter.OrPermissionsAuthorizationFilter">
    </bean>
    <!-- shiro定义 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/rest/exception/error_401"/>
        <property name="successUrl" value="/index.html"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter" />
                <entry key="orroles" value-ref="orRolesAuthorizationFilter" />
                <entry key="orperms" value-ref="orPermissionsAuthorizationFilter" />
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                
                <!--/** = authz-->
                <!--url = orroles[status]
                status:0-未激活(只针对邮件) 1-注册成功 2-注销 3-完善资料  4-待认证会员 5-已认证会员-->
                <!--url = orperms[identity:role:status]
                identity:1-企业 2-个人 3-厂家;
                role:100-管理员 200-专家 300-员工;
                status:3-完善资料  4-待认证会员 5-已认证会员-->
                <!-- 具备“完善资料”权限的配置-->
                /rest/system/mc/enquiry/** = orroles["3,4,5"]
                /rest/system/mc/product/** = orroles["3,4,5"]
                <!-- 具备“厂家+角色不限+实名认证”权限的配置-->
                /rest/system/mc/brand/** = orperms["3:100:5,3:300:5"]
                /rest/system/mc/agent/** = orperms["3:100:5,3:300:5"]
                <!-- 具备“企业+角色不限+实名认证”权限的配置-->
                /rest/job/mc/recruit/** = orperms["1:100:5,1:300:5,3:100:5,3:300:5"]
                <!-- 具备“个人+角色不限+状态不限”权限的配置-->
                /rest/job/mc/resume/** = orperms["2:100:1,2:100:3,2:100:4,2:100:5,2:200:1,2:200:3,2:200:4,2:200:5"]
                <!-- 具备“个人+专家+状态不限”权限的配置-->
                /rest/expert/mc/** = orperms["2:200:1,2:200:3,2:200:4,2:200:5"]
                <!-- 具备“企业+角色不限+完善资料”权限的配置-->
                /rest/expo/mc/** = orperms["1:100:3,1:100:4,1:100:5,1:300:3,1:300:4,1:300:5,3:100:3,3:100:4,3:100:5,3:300:3,3:300:4,3:300:5"]
                
                <!--/** = authc-->
                /logout = logout
                <!--/** = user-->
                /swagger/** = anon
                
            </value>
        </property>

    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans> 